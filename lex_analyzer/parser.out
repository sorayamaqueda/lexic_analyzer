Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE
    RANGE
    TAB
    USE

Grammar

Rule 0     S' -> P
Rule 1     P -> WITH P
Rule 2     S -> WHILE E LOOP S END LOOP SEMICOLON
Rule 3     S -> WHILE E LOOP A END LOOP SEMICOLON
Rule 4     S -> FOR V IN R LOOP S END LOOP SEMICOLON
Rule 5     S -> FOR V IN R LOOP A END LOOP SEMICOLON
Rule 6     S -> IF E THEN S ELSIF S END IF SEMICOLON
Rule 7     S -> IF E THEN S ELSE S END IF SEMICOLON
Rule 8     S -> IF E THEN S END IF SEMICOLON
Rule 9     S -> IF E THEN S ELSIF A END IF SEMICOLON
Rule 10    S -> IF E THEN S ELSE A END IF SEMICOLON
Rule 11    S -> IF E THEN A END IF SEMICOLON
Rule 12    S -> IF E THEN A ELSIF S END IF SEMICOLON
Rule 13    S -> IF E THEN A ELSE S END IF SEMICOLON
Rule 14    S -> IF E THEN A ELSIF A END IF SEMICOLON
Rule 15    S -> IF E THEN A ELSE A END IF SEMICOLON
Rule 16    A -> V ASSIGN E SEMICOLON
Rule 17    A -> V ASSIGN FLOAT SEMICOLON
Rule 18    A -> V ASSIGN INT SEMICOLON
Rule 19    P -> PROCEDURE ID IS V END ID SEMICOLON
Rule 20    P -> PROCEDURE ID IS BEGIN S END ID
Rule 21    E -> V GT FLOAT
Rule 22    E -> V GT INT
Rule 23    E -> V GT V
Rule 24    E -> V LT FLOAT
Rule 25    E -> V LT INT
Rule 26    E -> V LT V
Rule 27    E -> V EQUAL FLOAT
Rule 28    E -> V EQUAL INT
Rule 29    E -> V PLUS FLOAT
Rule 30    E -> V PLUS INT
Rule 31    E -> V PLUS V
Rule 32    E -> V MINUS FLOAT
Rule 33    E -> V MINUS INT
Rule 34    E -> V MINUS V
Rule 35    E -> V DIVIDE FLOAT
Rule 36    E -> V DIVIDE INT
Rule 37    E -> V DIVIDE V
Rule 38    E -> V TIMES FLOAT
Rule 39    E -> V TIMES INT
Rule 40    E -> V TIMES V
Rule 41    E -> V GTE V
Rule 42    E -> V GTE INT
Rule 43    E -> V GTE FLOAT
Rule 44    E -> V LTE V
Rule 45    E -> V LTE INT
Rule 46    E -> V LTE FLOAT
Rule 47    R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE
Rule 48    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 49    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 50    V -> TYPE ID IS INT SEMICOLON
Rule 51    V -> TYPE ID IS FLOAT SEMICOLON
Rule 52    V -> TYPE ID IS ARRAY R SEMICOLON
Rule 53    V -> TYPE ID SEMICOLON

Terminals, with rules where they appear

ARRAY                : 52
ASSIGN               : 16 17 18
BEGIN                : 20
BRACLOSE             : 47 48 49
BRAOPEN              : 47 48 49
COMMA                : 48 49 49
DIVIDE               : 35 36 37
ELSE                 : 7 10 13 15
ELSIF                : 6 9 12 14
END                  : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20
EQUAL                : 27 28
FLOAT                : 17 21 24 27 29 32 35 38 43 46 51
FOR                  : 4 5
GT                   : 21 22 23
GTE                  : 41 42 43
ID                   : 19 19 20 20 50 51 52 53
IF                   : 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15
IN                   : 4 5
INT                  : 18 22 25 28 30 33 36 39 42 45 47 47 48 48 48 48 49 49 49 49 49 49 50
IS                   : 19 20 50 51 52
LOOP                 : 2 2 3 3 4 4 5 5
LT                   : 24 25 26
LTE                  : 44 45 46
MINUS                : 32 33 34
NEWLINE              : 
PLUS                 : 29 30 31
PROCEDURE            : 19 20
RANGE                : 
SEMICOLON            : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 50 51 52 53
SUSPENSIVE           : 47 48 48 49 49 49
TAB                  : 
THEN                 : 6 7 8 9 10 11 12 13 14 15
TIMES                : 38 39 40
TYPE                 : 50 51 52 53
USE                  : 
WHILE                : 2 3
WITH                 : 1
error                : 

Nonterminals, with rules where they appear

A                    : 3 5 9 10 11 12 13 14 14 15 15
E                    : 2 3 6 7 8 9 10 11 12 13 14 15 16
P                    : 1 0
R                    : 4 5 52
S                    : 2 4 6 6 7 7 8 9 10 12 13 20
V                    : 4 5 16 17 18 19 21 22 23 23 24 25 26 26 27 28 29 30 31 31 32 33 34 34 35 36 37 37 38 39 40 40 41 41 42 43 44 44 45 46

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . WITH P
    (19) P -> . PROCEDURE ID IS V END ID SEMICOLON
    (20) P -> . PROCEDURE ID IS BEGIN S END ID

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 1

state 1

    (0) S' -> P .



state 2

    (1) P -> WITH . P
    (1) P -> . WITH P
    (19) P -> . PROCEDURE ID IS V END ID SEMICOLON
    (20) P -> . PROCEDURE ID IS BEGIN S END ID

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 4

state 3

    (19) P -> PROCEDURE . ID IS V END ID SEMICOLON
    (20) P -> PROCEDURE . ID IS BEGIN S END ID

    ID              shift and go to state 5


state 4

    (1) P -> WITH P .

    $end            reduce using rule 1 (P -> WITH P .)


state 5

    (19) P -> PROCEDURE ID . IS V END ID SEMICOLON
    (20) P -> PROCEDURE ID . IS BEGIN S END ID

    IS              shift and go to state 6


state 6

    (19) P -> PROCEDURE ID IS . V END ID SEMICOLON
    (20) P -> PROCEDURE ID IS . BEGIN S END ID
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    BEGIN           shift and go to state 8
    TYPE            shift and go to state 9

    V                              shift and go to state 7

state 7

    (19) P -> PROCEDURE ID IS V . END ID SEMICOLON

    END             shift and go to state 10


state 8

    (20) P -> PROCEDURE ID IS BEGIN . S END ID
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14

    S                              shift and go to state 11

state 9

    (50) V -> TYPE . ID IS INT SEMICOLON
    (51) V -> TYPE . ID IS FLOAT SEMICOLON
    (52) V -> TYPE . ID IS ARRAY R SEMICOLON
    (53) V -> TYPE . ID SEMICOLON

    ID              shift and go to state 15


state 10

    (19) P -> PROCEDURE ID IS V END . ID SEMICOLON

    ID              shift and go to state 16


state 11

    (20) P -> PROCEDURE ID IS BEGIN S . END ID

    END             shift and go to state 17


state 12

    (2) S -> WHILE . E LOOP S END LOOP SEMICOLON
    (3) S -> WHILE . E LOOP A END LOOP SEMICOLON
    (21) E -> . V GT FLOAT
    (22) E -> . V GT INT
    (23) E -> . V GT V
    (24) E -> . V LT FLOAT
    (25) E -> . V LT INT
    (26) E -> . V LT V
    (27) E -> . V EQUAL FLOAT
    (28) E -> . V EQUAL INT
    (29) E -> . V PLUS FLOAT
    (30) E -> . V PLUS INT
    (31) E -> . V PLUS V
    (32) E -> . V MINUS FLOAT
    (33) E -> . V MINUS INT
    (34) E -> . V MINUS V
    (35) E -> . V DIVIDE FLOAT
    (36) E -> . V DIVIDE INT
    (37) E -> . V DIVIDE V
    (38) E -> . V TIMES FLOAT
    (39) E -> . V TIMES INT
    (40) E -> . V TIMES V
    (41) E -> . V GTE V
    (42) E -> . V GTE INT
    (43) E -> . V GTE FLOAT
    (44) E -> . V LTE V
    (45) E -> . V LTE INT
    (46) E -> . V LTE FLOAT
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    TYPE            shift and go to state 9

    E                              shift and go to state 18
    V                              shift and go to state 19

state 13

    (4) S -> FOR . V IN R LOOP S END LOOP SEMICOLON
    (5) S -> FOR . V IN R LOOP A END LOOP SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    TYPE            shift and go to state 9

    V                              shift and go to state 20

state 14

    (6) S -> IF . E THEN S ELSIF S END IF SEMICOLON
    (7) S -> IF . E THEN S ELSE S END IF SEMICOLON
    (8) S -> IF . E THEN S END IF SEMICOLON
    (9) S -> IF . E THEN S ELSIF A END IF SEMICOLON
    (10) S -> IF . E THEN S ELSE A END IF SEMICOLON
    (11) S -> IF . E THEN A END IF SEMICOLON
    (12) S -> IF . E THEN A ELSIF S END IF SEMICOLON
    (13) S -> IF . E THEN A ELSE S END IF SEMICOLON
    (14) S -> IF . E THEN A ELSIF A END IF SEMICOLON
    (15) S -> IF . E THEN A ELSE A END IF SEMICOLON
    (21) E -> . V GT FLOAT
    (22) E -> . V GT INT
    (23) E -> . V GT V
    (24) E -> . V LT FLOAT
    (25) E -> . V LT INT
    (26) E -> . V LT V
    (27) E -> . V EQUAL FLOAT
    (28) E -> . V EQUAL INT
    (29) E -> . V PLUS FLOAT
    (30) E -> . V PLUS INT
    (31) E -> . V PLUS V
    (32) E -> . V MINUS FLOAT
    (33) E -> . V MINUS INT
    (34) E -> . V MINUS V
    (35) E -> . V DIVIDE FLOAT
    (36) E -> . V DIVIDE INT
    (37) E -> . V DIVIDE V
    (38) E -> . V TIMES FLOAT
    (39) E -> . V TIMES INT
    (40) E -> . V TIMES V
    (41) E -> . V GTE V
    (42) E -> . V GTE INT
    (43) E -> . V GTE FLOAT
    (44) E -> . V LTE V
    (45) E -> . V LTE INT
    (46) E -> . V LTE FLOAT
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    TYPE            shift and go to state 9

    E                              shift and go to state 21
    V                              shift and go to state 19

state 15

    (50) V -> TYPE ID . IS INT SEMICOLON
    (51) V -> TYPE ID . IS FLOAT SEMICOLON
    (52) V -> TYPE ID . IS ARRAY R SEMICOLON
    (53) V -> TYPE ID . SEMICOLON

    IS              shift and go to state 22
    SEMICOLON       shift and go to state 23


state 16

    (19) P -> PROCEDURE ID IS V END ID . SEMICOLON

    SEMICOLON       shift and go to state 24


state 17

    (20) P -> PROCEDURE ID IS BEGIN S END . ID

    ID              shift and go to state 25


state 18

    (2) S -> WHILE E . LOOP S END LOOP SEMICOLON
    (3) S -> WHILE E . LOOP A END LOOP SEMICOLON

    LOOP            shift and go to state 26


state 19

    (21) E -> V . GT FLOAT
    (22) E -> V . GT INT
    (23) E -> V . GT V
    (24) E -> V . LT FLOAT
    (25) E -> V . LT INT
    (26) E -> V . LT V
    (27) E -> V . EQUAL FLOAT
    (28) E -> V . EQUAL INT
    (29) E -> V . PLUS FLOAT
    (30) E -> V . PLUS INT
    (31) E -> V . PLUS V
    (32) E -> V . MINUS FLOAT
    (33) E -> V . MINUS INT
    (34) E -> V . MINUS V
    (35) E -> V . DIVIDE FLOAT
    (36) E -> V . DIVIDE INT
    (37) E -> V . DIVIDE V
    (38) E -> V . TIMES FLOAT
    (39) E -> V . TIMES INT
    (40) E -> V . TIMES V
    (41) E -> V . GTE V
    (42) E -> V . GTE INT
    (43) E -> V . GTE FLOAT
    (44) E -> V . LTE V
    (45) E -> V . LTE INT
    (46) E -> V . LTE FLOAT

    GT              shift and go to state 27
    LT              shift and go to state 28
    EQUAL           shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    TIMES           shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35


state 20

    (4) S -> FOR V . IN R LOOP S END LOOP SEMICOLON
    (5) S -> FOR V . IN R LOOP A END LOOP SEMICOLON

    IN              shift and go to state 36


state 21

    (6) S -> IF E . THEN S ELSIF S END IF SEMICOLON
    (7) S -> IF E . THEN S ELSE S END IF SEMICOLON
    (8) S -> IF E . THEN S END IF SEMICOLON
    (9) S -> IF E . THEN S ELSIF A END IF SEMICOLON
    (10) S -> IF E . THEN S ELSE A END IF SEMICOLON
    (11) S -> IF E . THEN A END IF SEMICOLON
    (12) S -> IF E . THEN A ELSIF S END IF SEMICOLON
    (13) S -> IF E . THEN A ELSE S END IF SEMICOLON
    (14) S -> IF E . THEN A ELSIF A END IF SEMICOLON
    (15) S -> IF E . THEN A ELSE A END IF SEMICOLON

    THEN            shift and go to state 37


state 22

    (50) V -> TYPE ID IS . INT SEMICOLON
    (51) V -> TYPE ID IS . FLOAT SEMICOLON
    (52) V -> TYPE ID IS . ARRAY R SEMICOLON

    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    ARRAY           shift and go to state 40


state 23

    (53) V -> TYPE ID SEMICOLON .

    END             reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    GT              reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    LT              reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    EQUAL           reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    PLUS            reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    MINUS           reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    DIVIDE          reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    TIMES           reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    GTE             reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    LTE             reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    IN              reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    ASSIGN          reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    LOOP            reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    THEN            reduce using rule 53 (V -> TYPE ID SEMICOLON .)
    SEMICOLON       reduce using rule 53 (V -> TYPE ID SEMICOLON .)


state 24

    (19) P -> PROCEDURE ID IS V END ID SEMICOLON .

    $end            reduce using rule 19 (P -> PROCEDURE ID IS V END ID SEMICOLON .)


state 25

    (20) P -> PROCEDURE ID IS BEGIN S END ID .

    $end            reduce using rule 20 (P -> PROCEDURE ID IS BEGIN S END ID .)


state 26

    (2) S -> WHILE E LOOP . S END LOOP SEMICOLON
    (3) S -> WHILE E LOOP . A END LOOP SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    S                              shift and go to state 41
    A                              shift and go to state 42
    V                              shift and go to state 43

state 27

    (21) E -> V GT . FLOAT
    (22) E -> V GT . INT
    (23) E -> V GT . V
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 45
    INT             shift and go to state 46
    TYPE            shift and go to state 9

    V                              shift and go to state 44

state 28

    (24) E -> V LT . FLOAT
    (25) E -> V LT . INT
    (26) E -> V LT . V
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 48
    INT             shift and go to state 49
    TYPE            shift and go to state 9

    V                              shift and go to state 47

state 29

    (27) E -> V EQUAL . FLOAT
    (28) E -> V EQUAL . INT

    FLOAT           shift and go to state 50
    INT             shift and go to state 51


state 30

    (29) E -> V PLUS . FLOAT
    (30) E -> V PLUS . INT
    (31) E -> V PLUS . V
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 53
    INT             shift and go to state 54
    TYPE            shift and go to state 9

    V                              shift and go to state 52

state 31

    (32) E -> V MINUS . FLOAT
    (33) E -> V MINUS . INT
    (34) E -> V MINUS . V
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 56
    INT             shift and go to state 57
    TYPE            shift and go to state 9

    V                              shift and go to state 55

state 32

    (35) E -> V DIVIDE . FLOAT
    (36) E -> V DIVIDE . INT
    (37) E -> V DIVIDE . V
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 59
    INT             shift and go to state 60
    TYPE            shift and go to state 9

    V                              shift and go to state 58

state 33

    (38) E -> V TIMES . FLOAT
    (39) E -> V TIMES . INT
    (40) E -> V TIMES . V
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    TYPE            shift and go to state 9

    V                              shift and go to state 61

state 34

    (41) E -> V GTE . V
    (42) E -> V GTE . INT
    (43) E -> V GTE . FLOAT
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    INT             shift and go to state 65
    FLOAT           shift and go to state 66
    TYPE            shift and go to state 9

    V                              shift and go to state 64

state 35

    (44) E -> V LTE . V
    (45) E -> V LTE . INT
    (46) E -> V LTE . FLOAT
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    INT             shift and go to state 68
    FLOAT           shift and go to state 69
    TYPE            shift and go to state 9

    V                              shift and go to state 67

state 36

    (4) S -> FOR V IN . R LOOP S END LOOP SEMICOLON
    (5) S -> FOR V IN . R LOOP A END LOOP SEMICOLON
    (47) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (48) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (49) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 71

    R                              shift and go to state 70

state 37

    (6) S -> IF E THEN . S ELSIF S END IF SEMICOLON
    (7) S -> IF E THEN . S ELSE S END IF SEMICOLON
    (8) S -> IF E THEN . S END IF SEMICOLON
    (9) S -> IF E THEN . S ELSIF A END IF SEMICOLON
    (10) S -> IF E THEN . S ELSE A END IF SEMICOLON
    (11) S -> IF E THEN . A END IF SEMICOLON
    (12) S -> IF E THEN . A ELSIF S END IF SEMICOLON
    (13) S -> IF E THEN . A ELSE S END IF SEMICOLON
    (14) S -> IF E THEN . A ELSIF A END IF SEMICOLON
    (15) S -> IF E THEN . A ELSE A END IF SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    S                              shift and go to state 72
    A                              shift and go to state 73
    V                              shift and go to state 43

state 38

    (50) V -> TYPE ID IS INT . SEMICOLON

    SEMICOLON       shift and go to state 74


state 39

    (51) V -> TYPE ID IS FLOAT . SEMICOLON

    SEMICOLON       shift and go to state 75


state 40

    (52) V -> TYPE ID IS ARRAY . R SEMICOLON
    (47) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (48) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (49) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 71

    R                              shift and go to state 76

state 41

    (2) S -> WHILE E LOOP S . END LOOP SEMICOLON

    END             shift and go to state 77


state 42

    (3) S -> WHILE E LOOP A . END LOOP SEMICOLON

    END             shift and go to state 78


state 43

    (16) A -> V . ASSIGN E SEMICOLON
    (17) A -> V . ASSIGN FLOAT SEMICOLON
    (18) A -> V . ASSIGN INT SEMICOLON

    ASSIGN          shift and go to state 79


state 44

    (23) E -> V GT V .

    LOOP            reduce using rule 23 (E -> V GT V .)
    THEN            reduce using rule 23 (E -> V GT V .)
    SEMICOLON       reduce using rule 23 (E -> V GT V .)


state 45

    (21) E -> V GT FLOAT .

    LOOP            reduce using rule 21 (E -> V GT FLOAT .)
    THEN            reduce using rule 21 (E -> V GT FLOAT .)
    SEMICOLON       reduce using rule 21 (E -> V GT FLOAT .)


state 46

    (22) E -> V GT INT .

    LOOP            reduce using rule 22 (E -> V GT INT .)
    THEN            reduce using rule 22 (E -> V GT INT .)
    SEMICOLON       reduce using rule 22 (E -> V GT INT .)


state 47

    (26) E -> V LT V .

    LOOP            reduce using rule 26 (E -> V LT V .)
    THEN            reduce using rule 26 (E -> V LT V .)
    SEMICOLON       reduce using rule 26 (E -> V LT V .)


state 48

    (24) E -> V LT FLOAT .

    LOOP            reduce using rule 24 (E -> V LT FLOAT .)
    THEN            reduce using rule 24 (E -> V LT FLOAT .)
    SEMICOLON       reduce using rule 24 (E -> V LT FLOAT .)


state 49

    (25) E -> V LT INT .

    LOOP            reduce using rule 25 (E -> V LT INT .)
    THEN            reduce using rule 25 (E -> V LT INT .)
    SEMICOLON       reduce using rule 25 (E -> V LT INT .)


state 50

    (27) E -> V EQUAL FLOAT .

    LOOP            reduce using rule 27 (E -> V EQUAL FLOAT .)
    THEN            reduce using rule 27 (E -> V EQUAL FLOAT .)
    SEMICOLON       reduce using rule 27 (E -> V EQUAL FLOAT .)


state 51

    (28) E -> V EQUAL INT .

    LOOP            reduce using rule 28 (E -> V EQUAL INT .)
    THEN            reduce using rule 28 (E -> V EQUAL INT .)
    SEMICOLON       reduce using rule 28 (E -> V EQUAL INT .)


state 52

    (31) E -> V PLUS V .

    LOOP            reduce using rule 31 (E -> V PLUS V .)
    THEN            reduce using rule 31 (E -> V PLUS V .)
    SEMICOLON       reduce using rule 31 (E -> V PLUS V .)


state 53

    (29) E -> V PLUS FLOAT .

    LOOP            reduce using rule 29 (E -> V PLUS FLOAT .)
    THEN            reduce using rule 29 (E -> V PLUS FLOAT .)
    SEMICOLON       reduce using rule 29 (E -> V PLUS FLOAT .)


state 54

    (30) E -> V PLUS INT .

    LOOP            reduce using rule 30 (E -> V PLUS INT .)
    THEN            reduce using rule 30 (E -> V PLUS INT .)
    SEMICOLON       reduce using rule 30 (E -> V PLUS INT .)


state 55

    (34) E -> V MINUS V .

    LOOP            reduce using rule 34 (E -> V MINUS V .)
    THEN            reduce using rule 34 (E -> V MINUS V .)
    SEMICOLON       reduce using rule 34 (E -> V MINUS V .)


state 56

    (32) E -> V MINUS FLOAT .

    LOOP            reduce using rule 32 (E -> V MINUS FLOAT .)
    THEN            reduce using rule 32 (E -> V MINUS FLOAT .)
    SEMICOLON       reduce using rule 32 (E -> V MINUS FLOAT .)


state 57

    (33) E -> V MINUS INT .

    LOOP            reduce using rule 33 (E -> V MINUS INT .)
    THEN            reduce using rule 33 (E -> V MINUS INT .)
    SEMICOLON       reduce using rule 33 (E -> V MINUS INT .)


state 58

    (37) E -> V DIVIDE V .

    LOOP            reduce using rule 37 (E -> V DIVIDE V .)
    THEN            reduce using rule 37 (E -> V DIVIDE V .)
    SEMICOLON       reduce using rule 37 (E -> V DIVIDE V .)


state 59

    (35) E -> V DIVIDE FLOAT .

    LOOP            reduce using rule 35 (E -> V DIVIDE FLOAT .)
    THEN            reduce using rule 35 (E -> V DIVIDE FLOAT .)
    SEMICOLON       reduce using rule 35 (E -> V DIVIDE FLOAT .)


state 60

    (36) E -> V DIVIDE INT .

    LOOP            reduce using rule 36 (E -> V DIVIDE INT .)
    THEN            reduce using rule 36 (E -> V DIVIDE INT .)
    SEMICOLON       reduce using rule 36 (E -> V DIVIDE INT .)


state 61

    (40) E -> V TIMES V .

    LOOP            reduce using rule 40 (E -> V TIMES V .)
    THEN            reduce using rule 40 (E -> V TIMES V .)
    SEMICOLON       reduce using rule 40 (E -> V TIMES V .)


state 62

    (38) E -> V TIMES FLOAT .

    LOOP            reduce using rule 38 (E -> V TIMES FLOAT .)
    THEN            reduce using rule 38 (E -> V TIMES FLOAT .)
    SEMICOLON       reduce using rule 38 (E -> V TIMES FLOAT .)


state 63

    (39) E -> V TIMES INT .

    LOOP            reduce using rule 39 (E -> V TIMES INT .)
    THEN            reduce using rule 39 (E -> V TIMES INT .)
    SEMICOLON       reduce using rule 39 (E -> V TIMES INT .)


state 64

    (41) E -> V GTE V .

    LOOP            reduce using rule 41 (E -> V GTE V .)
    THEN            reduce using rule 41 (E -> V GTE V .)
    SEMICOLON       reduce using rule 41 (E -> V GTE V .)


state 65

    (42) E -> V GTE INT .

    LOOP            reduce using rule 42 (E -> V GTE INT .)
    THEN            reduce using rule 42 (E -> V GTE INT .)
    SEMICOLON       reduce using rule 42 (E -> V GTE INT .)


state 66

    (43) E -> V GTE FLOAT .

    LOOP            reduce using rule 43 (E -> V GTE FLOAT .)
    THEN            reduce using rule 43 (E -> V GTE FLOAT .)
    SEMICOLON       reduce using rule 43 (E -> V GTE FLOAT .)


state 67

    (44) E -> V LTE V .

    LOOP            reduce using rule 44 (E -> V LTE V .)
    THEN            reduce using rule 44 (E -> V LTE V .)
    SEMICOLON       reduce using rule 44 (E -> V LTE V .)


state 68

    (45) E -> V LTE INT .

    LOOP            reduce using rule 45 (E -> V LTE INT .)
    THEN            reduce using rule 45 (E -> V LTE INT .)
    SEMICOLON       reduce using rule 45 (E -> V LTE INT .)


state 69

    (46) E -> V LTE FLOAT .

    LOOP            reduce using rule 46 (E -> V LTE FLOAT .)
    THEN            reduce using rule 46 (E -> V LTE FLOAT .)
    SEMICOLON       reduce using rule 46 (E -> V LTE FLOAT .)


state 70

    (4) S -> FOR V IN R . LOOP S END LOOP SEMICOLON
    (5) S -> FOR V IN R . LOOP A END LOOP SEMICOLON

    LOOP            shift and go to state 80


state 71

    (47) R -> BRAOPEN . INT SUSPENSIVE INT BRACLOSE
    (48) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (49) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 81


state 72

    (6) S -> IF E THEN S . ELSIF S END IF SEMICOLON
    (7) S -> IF E THEN S . ELSE S END IF SEMICOLON
    (8) S -> IF E THEN S . END IF SEMICOLON
    (9) S -> IF E THEN S . ELSIF A END IF SEMICOLON
    (10) S -> IF E THEN S . ELSE A END IF SEMICOLON

    ELSIF           shift and go to state 82
    ELSE            shift and go to state 84
    END             shift and go to state 83


state 73

    (11) S -> IF E THEN A . END IF SEMICOLON
    (12) S -> IF E THEN A . ELSIF S END IF SEMICOLON
    (13) S -> IF E THEN A . ELSE S END IF SEMICOLON
    (14) S -> IF E THEN A . ELSIF A END IF SEMICOLON
    (15) S -> IF E THEN A . ELSE A END IF SEMICOLON

    END             shift and go to state 85
    ELSIF           shift and go to state 86
    ELSE            shift and go to state 87


state 74

    (50) V -> TYPE ID IS INT SEMICOLON .

    END             reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    GT              reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    LT              reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    EQUAL           reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    PLUS            reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    MINUS           reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    DIVIDE          reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    TIMES           reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    GTE             reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    LTE             reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    IN              reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    ASSIGN          reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    LOOP            reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    THEN            reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)
    SEMICOLON       reduce using rule 50 (V -> TYPE ID IS INT SEMICOLON .)


state 75

    (51) V -> TYPE ID IS FLOAT SEMICOLON .

    END             reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    GT              reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    LT              reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    EQUAL           reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    PLUS            reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    MINUS           reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    DIVIDE          reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    TIMES           reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    GTE             reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    LTE             reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    IN              reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    ASSIGN          reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    LOOP            reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    THEN            reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)
    SEMICOLON       reduce using rule 51 (V -> TYPE ID IS FLOAT SEMICOLON .)


state 76

    (52) V -> TYPE ID IS ARRAY R . SEMICOLON

    SEMICOLON       shift and go to state 88


state 77

    (2) S -> WHILE E LOOP S END . LOOP SEMICOLON

    LOOP            shift and go to state 89


state 78

    (3) S -> WHILE E LOOP A END . LOOP SEMICOLON

    LOOP            shift and go to state 90


state 79

    (16) A -> V ASSIGN . E SEMICOLON
    (17) A -> V ASSIGN . FLOAT SEMICOLON
    (18) A -> V ASSIGN . INT SEMICOLON
    (21) E -> . V GT FLOAT
    (22) E -> . V GT INT
    (23) E -> . V GT V
    (24) E -> . V LT FLOAT
    (25) E -> . V LT INT
    (26) E -> . V LT V
    (27) E -> . V EQUAL FLOAT
    (28) E -> . V EQUAL INT
    (29) E -> . V PLUS FLOAT
    (30) E -> . V PLUS INT
    (31) E -> . V PLUS V
    (32) E -> . V MINUS FLOAT
    (33) E -> . V MINUS INT
    (34) E -> . V MINUS V
    (35) E -> . V DIVIDE FLOAT
    (36) E -> . V DIVIDE INT
    (37) E -> . V DIVIDE V
    (38) E -> . V TIMES FLOAT
    (39) E -> . V TIMES INT
    (40) E -> . V TIMES V
    (41) E -> . V GTE V
    (42) E -> . V GTE INT
    (43) E -> . V GTE FLOAT
    (44) E -> . V LTE V
    (45) E -> . V LTE INT
    (46) E -> . V LTE FLOAT
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    FLOAT           shift and go to state 92
    INT             shift and go to state 93
    TYPE            shift and go to state 9

    V                              shift and go to state 19
    E                              shift and go to state 91

state 80

    (4) S -> FOR V IN R LOOP . S END LOOP SEMICOLON
    (5) S -> FOR V IN R LOOP . A END LOOP SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    V                              shift and go to state 43
    S                              shift and go to state 94
    A                              shift and go to state 95

state 81

    (47) R -> BRAOPEN INT . SUSPENSIVE INT BRACLOSE
    (48) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (49) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 96


state 82

    (6) S -> IF E THEN S ELSIF . S END IF SEMICOLON
    (9) S -> IF E THEN S ELSIF . A END IF SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    S                              shift and go to state 97
    A                              shift and go to state 98
    V                              shift and go to state 43

state 83

    (8) S -> IF E THEN S END . IF SEMICOLON

    IF              shift and go to state 99


state 84

    (7) S -> IF E THEN S ELSE . S END IF SEMICOLON
    (10) S -> IF E THEN S ELSE . A END IF SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    S                              shift and go to state 100
    A                              shift and go to state 101
    V                              shift and go to state 43

state 85

    (11) S -> IF E THEN A END . IF SEMICOLON

    IF              shift and go to state 102


state 86

    (12) S -> IF E THEN A ELSIF . S END IF SEMICOLON
    (14) S -> IF E THEN A ELSIF . A END IF SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    A                              shift and go to state 103
    S                              shift and go to state 104
    V                              shift and go to state 43

state 87

    (13) S -> IF E THEN A ELSE . S END IF SEMICOLON
    (15) S -> IF E THEN A ELSE . A END IF SEMICOLON
    (2) S -> . WHILE E LOOP S END LOOP SEMICOLON
    (3) S -> . WHILE E LOOP A END LOOP SEMICOLON
    (4) S -> . FOR V IN R LOOP S END LOOP SEMICOLON
    (5) S -> . FOR V IN R LOOP A END LOOP SEMICOLON
    (6) S -> . IF E THEN S ELSIF S END IF SEMICOLON
    (7) S -> . IF E THEN S ELSE S END IF SEMICOLON
    (8) S -> . IF E THEN S END IF SEMICOLON
    (9) S -> . IF E THEN S ELSIF A END IF SEMICOLON
    (10) S -> . IF E THEN S ELSE A END IF SEMICOLON
    (11) S -> . IF E THEN A END IF SEMICOLON
    (12) S -> . IF E THEN A ELSIF S END IF SEMICOLON
    (13) S -> . IF E THEN A ELSE S END IF SEMICOLON
    (14) S -> . IF E THEN A ELSIF A END IF SEMICOLON
    (15) S -> . IF E THEN A ELSE A END IF SEMICOLON
    (16) A -> . V ASSIGN E SEMICOLON
    (17) A -> . V ASSIGN FLOAT SEMICOLON
    (18) A -> . V ASSIGN INT SEMICOLON
    (50) V -> . TYPE ID IS INT SEMICOLON
    (51) V -> . TYPE ID IS FLOAT SEMICOLON
    (52) V -> . TYPE ID IS ARRAY R SEMICOLON
    (53) V -> . TYPE ID SEMICOLON

    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14
    TYPE            shift and go to state 9

    A                              shift and go to state 105
    S                              shift and go to state 106
    V                              shift and go to state 43

state 88

    (52) V -> TYPE ID IS ARRAY R SEMICOLON .

    END             reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    GT              reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    LT              reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    EQUAL           reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    PLUS            reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    MINUS           reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    DIVIDE          reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    TIMES           reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    GTE             reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    LTE             reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    IN              reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    ASSIGN          reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    LOOP            reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    THEN            reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    SEMICOLON       reduce using rule 52 (V -> TYPE ID IS ARRAY R SEMICOLON .)


state 89

    (2) S -> WHILE E LOOP S END LOOP . SEMICOLON

    SEMICOLON       shift and go to state 107


state 90

    (3) S -> WHILE E LOOP A END LOOP . SEMICOLON

    SEMICOLON       shift and go to state 108


state 91

    (16) A -> V ASSIGN E . SEMICOLON

    SEMICOLON       shift and go to state 109


state 92

    (17) A -> V ASSIGN FLOAT . SEMICOLON

    SEMICOLON       shift and go to state 110


state 93

    (18) A -> V ASSIGN INT . SEMICOLON

    SEMICOLON       shift and go to state 111


state 94

    (4) S -> FOR V IN R LOOP S . END LOOP SEMICOLON

    END             shift and go to state 112


state 95

    (5) S -> FOR V IN R LOOP A . END LOOP SEMICOLON

    END             shift and go to state 113


state 96

    (47) R -> BRAOPEN INT SUSPENSIVE . INT BRACLOSE
    (48) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE
    (49) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 114


state 97

    (6) S -> IF E THEN S ELSIF S . END IF SEMICOLON

    END             shift and go to state 115


state 98

    (9) S -> IF E THEN S ELSIF A . END IF SEMICOLON

    END             shift and go to state 116


state 99

    (8) S -> IF E THEN S END IF . SEMICOLON

    SEMICOLON       shift and go to state 117


state 100

    (7) S -> IF E THEN S ELSE S . END IF SEMICOLON

    END             shift and go to state 118


state 101

    (10) S -> IF E THEN S ELSE A . END IF SEMICOLON

    END             shift and go to state 119


state 102

    (11) S -> IF E THEN A END IF . SEMICOLON

    SEMICOLON       shift and go to state 120


state 103

    (14) S -> IF E THEN A ELSIF A . END IF SEMICOLON

    END             shift and go to state 121


state 104

    (12) S -> IF E THEN A ELSIF S . END IF SEMICOLON

    END             shift and go to state 122


state 105

    (15) S -> IF E THEN A ELSE A . END IF SEMICOLON

    END             shift and go to state 123


state 106

    (13) S -> IF E THEN A ELSE S . END IF SEMICOLON

    END             shift and go to state 124


state 107

    (2) S -> WHILE E LOOP S END LOOP SEMICOLON .

    END             reduce using rule 2 (S -> WHILE E LOOP S END LOOP SEMICOLON .)
    ELSIF           reduce using rule 2 (S -> WHILE E LOOP S END LOOP SEMICOLON .)
    ELSE            reduce using rule 2 (S -> WHILE E LOOP S END LOOP SEMICOLON .)


state 108

    (3) S -> WHILE E LOOP A END LOOP SEMICOLON .

    END             reduce using rule 3 (S -> WHILE E LOOP A END LOOP SEMICOLON .)
    ELSIF           reduce using rule 3 (S -> WHILE E LOOP A END LOOP SEMICOLON .)
    ELSE            reduce using rule 3 (S -> WHILE E LOOP A END LOOP SEMICOLON .)


state 109

    (16) A -> V ASSIGN E SEMICOLON .

    END             reduce using rule 16 (A -> V ASSIGN E SEMICOLON .)
    ELSIF           reduce using rule 16 (A -> V ASSIGN E SEMICOLON .)
    ELSE            reduce using rule 16 (A -> V ASSIGN E SEMICOLON .)


state 110

    (17) A -> V ASSIGN FLOAT SEMICOLON .

    END             reduce using rule 17 (A -> V ASSIGN FLOAT SEMICOLON .)
    ELSIF           reduce using rule 17 (A -> V ASSIGN FLOAT SEMICOLON .)
    ELSE            reduce using rule 17 (A -> V ASSIGN FLOAT SEMICOLON .)


state 111

    (18) A -> V ASSIGN INT SEMICOLON .

    END             reduce using rule 18 (A -> V ASSIGN INT SEMICOLON .)
    ELSIF           reduce using rule 18 (A -> V ASSIGN INT SEMICOLON .)
    ELSE            reduce using rule 18 (A -> V ASSIGN INT SEMICOLON .)


state 112

    (4) S -> FOR V IN R LOOP S END . LOOP SEMICOLON

    LOOP            shift and go to state 125


state 113

    (5) S -> FOR V IN R LOOP A END . LOOP SEMICOLON

    LOOP            shift and go to state 126


state 114

    (47) R -> BRAOPEN INT SUSPENSIVE INT . BRACLOSE
    (48) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE
    (49) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 127
    COMMA           shift and go to state 128


state 115

    (6) S -> IF E THEN S ELSIF S END . IF SEMICOLON

    IF              shift and go to state 129


state 116

    (9) S -> IF E THEN S ELSIF A END . IF SEMICOLON

    IF              shift and go to state 130


state 117

    (8) S -> IF E THEN S END IF SEMICOLON .

    END             reduce using rule 8 (S -> IF E THEN S END IF SEMICOLON .)
    ELSIF           reduce using rule 8 (S -> IF E THEN S END IF SEMICOLON .)
    ELSE            reduce using rule 8 (S -> IF E THEN S END IF SEMICOLON .)


state 118

    (7) S -> IF E THEN S ELSE S END . IF SEMICOLON

    IF              shift and go to state 131


state 119

    (10) S -> IF E THEN S ELSE A END . IF SEMICOLON

    IF              shift and go to state 132


state 120

    (11) S -> IF E THEN A END IF SEMICOLON .

    END             reduce using rule 11 (S -> IF E THEN A END IF SEMICOLON .)
    ELSIF           reduce using rule 11 (S -> IF E THEN A END IF SEMICOLON .)
    ELSE            reduce using rule 11 (S -> IF E THEN A END IF SEMICOLON .)


state 121

    (14) S -> IF E THEN A ELSIF A END . IF SEMICOLON

    IF              shift and go to state 133


state 122

    (12) S -> IF E THEN A ELSIF S END . IF SEMICOLON

    IF              shift and go to state 134


state 123

    (15) S -> IF E THEN A ELSE A END . IF SEMICOLON

    IF              shift and go to state 135


state 124

    (13) S -> IF E THEN A ELSE S END . IF SEMICOLON

    IF              shift and go to state 136


state 125

    (4) S -> FOR V IN R LOOP S END LOOP . SEMICOLON

    SEMICOLON       shift and go to state 137


state 126

    (5) S -> FOR V IN R LOOP A END LOOP . SEMICOLON

    SEMICOLON       shift and go to state 138


state 127

    (47) R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 47 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 47 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)


state 128

    (48) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE
    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 139


state 129

    (6) S -> IF E THEN S ELSIF S END IF . SEMICOLON

    SEMICOLON       shift and go to state 140


state 130

    (9) S -> IF E THEN S ELSIF A END IF . SEMICOLON

    SEMICOLON       shift and go to state 141


state 131

    (7) S -> IF E THEN S ELSE S END IF . SEMICOLON

    SEMICOLON       shift and go to state 142


state 132

    (10) S -> IF E THEN S ELSE A END IF . SEMICOLON

    SEMICOLON       shift and go to state 143


state 133

    (14) S -> IF E THEN A ELSIF A END IF . SEMICOLON

    SEMICOLON       shift and go to state 144


state 134

    (12) S -> IF E THEN A ELSIF S END IF . SEMICOLON

    SEMICOLON       shift and go to state 145


state 135

    (15) S -> IF E THEN A ELSE A END IF . SEMICOLON

    SEMICOLON       shift and go to state 146


state 136

    (13) S -> IF E THEN A ELSE S END IF . SEMICOLON

    SEMICOLON       shift and go to state 147


state 137

    (4) S -> FOR V IN R LOOP S END LOOP SEMICOLON .

    END             reduce using rule 4 (S -> FOR V IN R LOOP S END LOOP SEMICOLON .)
    ELSIF           reduce using rule 4 (S -> FOR V IN R LOOP S END LOOP SEMICOLON .)
    ELSE            reduce using rule 4 (S -> FOR V IN R LOOP S END LOOP SEMICOLON .)


state 138

    (5) S -> FOR V IN R LOOP A END LOOP SEMICOLON .

    END             reduce using rule 5 (S -> FOR V IN R LOOP A END LOOP SEMICOLON .)
    ELSIF           reduce using rule 5 (S -> FOR V IN R LOOP A END LOOP SEMICOLON .)
    ELSE            reduce using rule 5 (S -> FOR V IN R LOOP A END LOOP SEMICOLON .)


state 139

    (48) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE
    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 148


state 140

    (6) S -> IF E THEN S ELSIF S END IF SEMICOLON .

    END             reduce using rule 6 (S -> IF E THEN S ELSIF S END IF SEMICOLON .)
    ELSIF           reduce using rule 6 (S -> IF E THEN S ELSIF S END IF SEMICOLON .)
    ELSE            reduce using rule 6 (S -> IF E THEN S ELSIF S END IF SEMICOLON .)


state 141

    (9) S -> IF E THEN S ELSIF A END IF SEMICOLON .

    END             reduce using rule 9 (S -> IF E THEN S ELSIF A END IF SEMICOLON .)
    ELSIF           reduce using rule 9 (S -> IF E THEN S ELSIF A END IF SEMICOLON .)
    ELSE            reduce using rule 9 (S -> IF E THEN S ELSIF A END IF SEMICOLON .)


state 142

    (7) S -> IF E THEN S ELSE S END IF SEMICOLON .

    END             reduce using rule 7 (S -> IF E THEN S ELSE S END IF SEMICOLON .)
    ELSIF           reduce using rule 7 (S -> IF E THEN S ELSE S END IF SEMICOLON .)
    ELSE            reduce using rule 7 (S -> IF E THEN S ELSE S END IF SEMICOLON .)


state 143

    (10) S -> IF E THEN S ELSE A END IF SEMICOLON .

    END             reduce using rule 10 (S -> IF E THEN S ELSE A END IF SEMICOLON .)
    ELSIF           reduce using rule 10 (S -> IF E THEN S ELSE A END IF SEMICOLON .)
    ELSE            reduce using rule 10 (S -> IF E THEN S ELSE A END IF SEMICOLON .)


state 144

    (14) S -> IF E THEN A ELSIF A END IF SEMICOLON .

    END             reduce using rule 14 (S -> IF E THEN A ELSIF A END IF SEMICOLON .)
    ELSIF           reduce using rule 14 (S -> IF E THEN A ELSIF A END IF SEMICOLON .)
    ELSE            reduce using rule 14 (S -> IF E THEN A ELSIF A END IF SEMICOLON .)


state 145

    (12) S -> IF E THEN A ELSIF S END IF SEMICOLON .

    END             reduce using rule 12 (S -> IF E THEN A ELSIF S END IF SEMICOLON .)
    ELSIF           reduce using rule 12 (S -> IF E THEN A ELSIF S END IF SEMICOLON .)
    ELSE            reduce using rule 12 (S -> IF E THEN A ELSIF S END IF SEMICOLON .)


state 146

    (15) S -> IF E THEN A ELSE A END IF SEMICOLON .

    END             reduce using rule 15 (S -> IF E THEN A ELSE A END IF SEMICOLON .)
    ELSIF           reduce using rule 15 (S -> IF E THEN A ELSE A END IF SEMICOLON .)
    ELSE            reduce using rule 15 (S -> IF E THEN A ELSE A END IF SEMICOLON .)


state 147

    (13) S -> IF E THEN A ELSE S END IF SEMICOLON .

    END             reduce using rule 13 (S -> IF E THEN A ELSE S END IF SEMICOLON .)
    ELSIF           reduce using rule 13 (S -> IF E THEN A ELSE S END IF SEMICOLON .)
    ELSE            reduce using rule 13 (S -> IF E THEN A ELSE S END IF SEMICOLON .)


state 148

    (48) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE
    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 149


state 149

    (48) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE
    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 151
    COMMA           shift and go to state 150


state 150

    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 152


state 151

    (48) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 48 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 48 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)


state 152

    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 153


state 153

    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE

    INT             shift and go to state 154


state 154

    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE

    BRACLOSE        shift and go to state 155


state 155

    (49) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 49 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 49 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)

