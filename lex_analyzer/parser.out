Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RANGE
    TAB
    USE

Grammar

Rule 0     S' -> P
Rule 1     P -> WITH P
Rule 2     IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
Rule 3     IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE
Rule 4     IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE
Rule 5     IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
Rule 6     IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE
Rule 7     IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE
Rule 8     IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
Rule 9     IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE
Rule 10    IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
Rule 11    IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE
Rule 12    WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE
Rule 13    WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE
Rule 14    FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
Rule 15    FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
Rule 16    S -> WHILESTATEMENT
Rule 17    S -> FORSTATEMENT
Rule 18    S -> IFSTATEMENT
Rule 19    A -> ID ASSIGN E SEMICOLON NEWLINE
Rule 20    A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE
Rule 21    A -> ID ASSIGN NUMBER SEMICOLON NEWLINE
Rule 22    P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE
Rule 23    P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE
Rule 24    E -> V GT FLOATNUM
Rule 25    E -> V GT NUMBER
Rule 26    E -> V GT V
Rule 27    E -> V LT FLOATNUM
Rule 28    E -> V LT NUMBER
Rule 29    E -> V LT V
Rule 30    E -> V EQUAL FLOATNUM
Rule 31    E -> V EQUAL NUMBER
Rule 32    E -> V PLUS FLOATNUM
Rule 33    E -> V PLUS NUMBER
Rule 34    E -> V PLUS V
Rule 35    E -> V MINUS FLOATNUM
Rule 36    E -> V MINUS NUMBER
Rule 37    E -> V MINUS V
Rule 38    E -> V DIVIDE FLOATNUM
Rule 39    E -> V DIVIDE NUMBER
Rule 40    E -> V DIVIDE V
Rule 41    E -> V TIMES FLOATNUM
Rule 42    E -> V TIMES NUMBER
Rule 43    E -> V TIMES V
Rule 44    E -> V GTE V
Rule 45    E -> V GTE NUMBER
Rule 46    E -> V GTE FLOATNUM
Rule 47    E -> V LTE V
Rule 48    E -> V LTE NUMBER
Rule 49    E -> V LTE FLOATNUM
Rule 50    R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE
Rule 51    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 52    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 53    V -> TYPE ID IS INT SEMICOLON
Rule 54    V -> TYPE ID IS FLOAT SEMICOLON
Rule 55    V -> TYPE ID IS ARRAY R SEMICOLON
Rule 56    V -> TYPE ID SEMICOLON

Terminals, with rules where they appear

ARRAY                : 55
ASSIGN               : 19 20 21
BEGIN                : 23
BRACLOSE             : 50 51 52
BRAOPEN              : 50 51 52
COMMA                : 51 52 52
DIVIDE               : 38 39 40
ELSE                 : 3 6 9 11
ELSIF                : 2 5 8 10
END                  : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 22 23
EQUAL                : 30 31
FLOAT                : 54
FLOATNUM             : 20 24 27 30 32 35 38 41 46 49
FOR                  : 14 15
GT                   : 24 25 26
GTE                  : 44 45 46
ID                   : 19 20 21 22 22 23 23 53 54 55 56
IF                   : 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11
IN                   : 14 15
INT                  : 50 50 51 51 51 51 52 52 52 52 52 52 53
IS                   : 22 23 53 54 55
LOOP                 : 12 12 13 13 14 14 15 15
LT                   : 27 28 29
LTE                  : 47 48 49
MINUS                : 35 36 37
NEWLINE              : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20 21 22 23
NUMBER               : 21 25 28 31 33 36 39 42 45 48
PLUS                 : 32 33 34
PROCEDURE            : 22 23
RANGE                : 
SEMICOLON            : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20 21 22 23 53 54 55 56
SUSPENSIVE           : 50 51 51 52 52 52
TAB                  : 
THEN                 : 2 3 4 5 6 7 8 9 10 11
TIMES                : 41 42 43
TYPE                 : 53 54 55 56
USE                  : 
WHILE                : 12 13
WITH                 : 1
error                : 

Nonterminals, with rules where they appear

A                    : 5 6 7 8 9 10 10 11 11 13 15
E                    : 2 3 4 5 6 7 8 9 10 11 12 13 19
FORSTATEMENT         : 17
IFSTATEMENT          : 18
P                    : 1 0
R                    : 14 15 55
S                    : 2 2 3 3 4 5 6 8 9 12 14 23
V                    : 14 15 22 24 25 26 26 27 28 29 29 30 31 32 33 34 34 35 36 37 37 38 39 40 40 41 42 43 43 44 44 45 46 47 47 48 49
WHILESTATEMENT       : 16

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . WITH P
    (22) P -> . PROCEDURE ID IS V END ID SEMICOLON NEWLINE
    (23) P -> . PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 1

state 1

    (0) S' -> P .



state 2

    (1) P -> WITH . P
    (1) P -> . WITH P
    (22) P -> . PROCEDURE ID IS V END ID SEMICOLON NEWLINE
    (23) P -> . PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 4

state 3

    (22) P -> PROCEDURE . ID IS V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE . ID IS BEGIN S END ID SEMICOLON NEWLINE

    ID              shift and go to state 5


state 4

    (1) P -> WITH P .

    $end            reduce using rule 1 (P -> WITH P .)


state 5

    (22) P -> PROCEDURE ID . IS V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE ID . IS BEGIN S END ID SEMICOLON NEWLINE

    IS              shift and go to state 6


state 6

    (22) P -> PROCEDURE ID IS . V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE ID IS . BEGIN S END ID SEMICOLON NEWLINE
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    BEGIN           shift and go to state 8
    TYPE            shift and go to state 9

    V                              shift and go to state 7

state 7

    (22) P -> PROCEDURE ID IS V . END ID SEMICOLON NEWLINE

    END             shift and go to state 10


state 8

    (23) P -> PROCEDURE ID IS BEGIN . S END ID SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    S                              shift and go to state 11
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 9

    (53) V -> TYPE . ID IS INT SEMICOLON
    (54) V -> TYPE . ID IS FLOAT SEMICOLON
    (55) V -> TYPE . ID IS ARRAY R SEMICOLON
    (56) V -> TYPE . ID SEMICOLON

    ID              shift and go to state 18


state 10

    (22) P -> PROCEDURE ID IS V END . ID SEMICOLON NEWLINE

    ID              shift and go to state 19


state 11

    (23) P -> PROCEDURE ID IS BEGIN S . END ID SEMICOLON NEWLINE

    END             shift and go to state 20


state 12

    (16) S -> WHILESTATEMENT .

    END             reduce using rule 16 (S -> WHILESTATEMENT .)
    ELSIF           reduce using rule 16 (S -> WHILESTATEMENT .)
    ELSE            reduce using rule 16 (S -> WHILESTATEMENT .)


state 13

    (17) S -> FORSTATEMENT .

    END             reduce using rule 17 (S -> FORSTATEMENT .)
    ELSIF           reduce using rule 17 (S -> FORSTATEMENT .)
    ELSE            reduce using rule 17 (S -> FORSTATEMENT .)


state 14

    (18) S -> IFSTATEMENT .

    END             reduce using rule 18 (S -> IFSTATEMENT .)
    ELSIF           reduce using rule 18 (S -> IFSTATEMENT .)
    ELSE            reduce using rule 18 (S -> IFSTATEMENT .)


state 15

    (12) WHILESTATEMENT -> WHILE . E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE . E LOOP A END LOOP SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    TYPE            shift and go to state 9

    E                              shift and go to state 21
    V                              shift and go to state 22

state 16

    (14) FORSTATEMENT -> FOR . V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR . V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    TYPE            shift and go to state 9

    V                              shift and go to state 23

state 17

    (2) IFSTATEMENT -> IF . E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF . E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF . E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF . E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF . E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF . E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF . E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF . E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF . E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF . E THEN A ELSE A END IF SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    TYPE            shift and go to state 9

    E                              shift and go to state 24
    V                              shift and go to state 22

state 18

    (53) V -> TYPE ID . IS INT SEMICOLON
    (54) V -> TYPE ID . IS FLOAT SEMICOLON
    (55) V -> TYPE ID . IS ARRAY R SEMICOLON
    (56) V -> TYPE ID . SEMICOLON

    IS              shift and go to state 25
    SEMICOLON       shift and go to state 26


state 19

    (22) P -> PROCEDURE ID IS V END ID . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 27


state 20

    (23) P -> PROCEDURE ID IS BEGIN S END . ID SEMICOLON NEWLINE

    ID              shift and go to state 28


state 21

    (12) WHILESTATEMENT -> WHILE E . LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE E . LOOP A END LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 29


state 22

    (24) E -> V . GT FLOATNUM
    (25) E -> V . GT NUMBER
    (26) E -> V . GT V
    (27) E -> V . LT FLOATNUM
    (28) E -> V . LT NUMBER
    (29) E -> V . LT V
    (30) E -> V . EQUAL FLOATNUM
    (31) E -> V . EQUAL NUMBER
    (32) E -> V . PLUS FLOATNUM
    (33) E -> V . PLUS NUMBER
    (34) E -> V . PLUS V
    (35) E -> V . MINUS FLOATNUM
    (36) E -> V . MINUS NUMBER
    (37) E -> V . MINUS V
    (38) E -> V . DIVIDE FLOATNUM
    (39) E -> V . DIVIDE NUMBER
    (40) E -> V . DIVIDE V
    (41) E -> V . TIMES FLOATNUM
    (42) E -> V . TIMES NUMBER
    (43) E -> V . TIMES V
    (44) E -> V . GTE V
    (45) E -> V . GTE NUMBER
    (46) E -> V . GTE FLOATNUM
    (47) E -> V . LTE V
    (48) E -> V . LTE NUMBER
    (49) E -> V . LTE FLOATNUM

    GT              shift and go to state 30
    LT              shift and go to state 31
    EQUAL           shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    DIVIDE          shift and go to state 35
    TIMES           shift and go to state 36
    GTE             shift and go to state 37
    LTE             shift and go to state 38


state 23

    (14) FORSTATEMENT -> FOR V . IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V . IN R LOOP A END LOOP SEMICOLON NEWLINE

    IN              shift and go to state 39


state 24

    (2) IFSTATEMENT -> IF E . THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E . THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E . THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E . THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E . THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF E . THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E . THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E . THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E . THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E . THEN A ELSE A END IF SEMICOLON NEWLINE

    THEN            shift and go to state 40


state 25

    (53) V -> TYPE ID IS . INT SEMICOLON
    (54) V -> TYPE ID IS . FLOAT SEMICOLON
    (55) V -> TYPE ID IS . ARRAY R SEMICOLON

    INT             shift and go to state 41
    FLOAT           shift and go to state 42
    ARRAY           shift and go to state 43


state 26

    (56) V -> TYPE ID SEMICOLON .

    END             reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    GT              reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    LT              reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    EQUAL           reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    PLUS            reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    MINUS           reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    DIVIDE          reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    TIMES           reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    GTE             reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    LTE             reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    IN              reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    LOOP            reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    THEN            reduce using rule 56 (V -> TYPE ID SEMICOLON .)
    SEMICOLON       reduce using rule 56 (V -> TYPE ID SEMICOLON .)


state 27

    (22) P -> PROCEDURE ID IS V END ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 44


state 28

    (23) P -> PROCEDURE ID IS BEGIN S END ID . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 45


state 29

    (12) WHILESTATEMENT -> WHILE E LOOP . S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE E LOOP . A END LOOP SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    S                              shift and go to state 46
    A                              shift and go to state 47
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 30

    (24) E -> V GT . FLOATNUM
    (25) E -> V GT . NUMBER
    (26) E -> V GT . V
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 50
    NUMBER          shift and go to state 51
    TYPE            shift and go to state 9

    V                              shift and go to state 49

state 31

    (27) E -> V LT . FLOATNUM
    (28) E -> V LT . NUMBER
    (29) E -> V LT . V
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 53
    NUMBER          shift and go to state 54
    TYPE            shift and go to state 9

    V                              shift and go to state 52

state 32

    (30) E -> V EQUAL . FLOATNUM
    (31) E -> V EQUAL . NUMBER

    FLOATNUM        shift and go to state 55
    NUMBER          shift and go to state 56


state 33

    (32) E -> V PLUS . FLOATNUM
    (33) E -> V PLUS . NUMBER
    (34) E -> V PLUS . V
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 58
    NUMBER          shift and go to state 59
    TYPE            shift and go to state 9

    V                              shift and go to state 57

state 34

    (35) E -> V MINUS . FLOATNUM
    (36) E -> V MINUS . NUMBER
    (37) E -> V MINUS . V
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 61
    NUMBER          shift and go to state 62
    TYPE            shift and go to state 9

    V                              shift and go to state 60

state 35

    (38) E -> V DIVIDE . FLOATNUM
    (39) E -> V DIVIDE . NUMBER
    (40) E -> V DIVIDE . V
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 64
    NUMBER          shift and go to state 65
    TYPE            shift and go to state 9

    V                              shift and go to state 63

state 36

    (41) E -> V TIMES . FLOATNUM
    (42) E -> V TIMES . NUMBER
    (43) E -> V TIMES . V
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 67
    NUMBER          shift and go to state 68
    TYPE            shift and go to state 9

    V                              shift and go to state 66

state 37

    (44) E -> V GTE . V
    (45) E -> V GTE . NUMBER
    (46) E -> V GTE . FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    NUMBER          shift and go to state 70
    FLOATNUM        shift and go to state 71
    TYPE            shift and go to state 9

    V                              shift and go to state 69

state 38

    (47) E -> V LTE . V
    (48) E -> V LTE . NUMBER
    (49) E -> V LTE . FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    NUMBER          shift and go to state 73
    FLOATNUM        shift and go to state 74
    TYPE            shift and go to state 9

    V                              shift and go to state 72

state 39

    (14) FORSTATEMENT -> FOR V IN . R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN . R LOOP A END LOOP SEMICOLON NEWLINE
    (50) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (51) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 76

    R                              shift and go to state 75

state 40

    (2) IFSTATEMENT -> IF E THEN . S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E THEN . S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E THEN . S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN . S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN . S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF E THEN . A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E THEN . A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E THEN . A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN . A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN . A ELSE A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    S                              shift and go to state 77
    A                              shift and go to state 78
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 41

    (53) V -> TYPE ID IS INT . SEMICOLON

    SEMICOLON       shift and go to state 79


state 42

    (54) V -> TYPE ID IS FLOAT . SEMICOLON

    SEMICOLON       shift and go to state 80


state 43

    (55) V -> TYPE ID IS ARRAY . R SEMICOLON
    (50) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (51) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 76

    R                              shift and go to state 81

state 44

    (22) P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE .

    $end            reduce using rule 22 (P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE .)


state 45

    (23) P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 82


state 46

    (12) WHILESTATEMENT -> WHILE E LOOP S . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 83


state 47

    (13) WHILESTATEMENT -> WHILE E LOOP A . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 84


state 48

    (19) A -> ID . ASSIGN E SEMICOLON NEWLINE
    (20) A -> ID . ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> ID . ASSIGN NUMBER SEMICOLON NEWLINE

    ASSIGN          shift and go to state 85


state 49

    (26) E -> V GT V .

    LOOP            reduce using rule 26 (E -> V GT V .)
    THEN            reduce using rule 26 (E -> V GT V .)
    SEMICOLON       reduce using rule 26 (E -> V GT V .)


state 50

    (24) E -> V GT FLOATNUM .

    LOOP            reduce using rule 24 (E -> V GT FLOATNUM .)
    THEN            reduce using rule 24 (E -> V GT FLOATNUM .)
    SEMICOLON       reduce using rule 24 (E -> V GT FLOATNUM .)


state 51

    (25) E -> V GT NUMBER .

    LOOP            reduce using rule 25 (E -> V GT NUMBER .)
    THEN            reduce using rule 25 (E -> V GT NUMBER .)
    SEMICOLON       reduce using rule 25 (E -> V GT NUMBER .)


state 52

    (29) E -> V LT V .

    LOOP            reduce using rule 29 (E -> V LT V .)
    THEN            reduce using rule 29 (E -> V LT V .)
    SEMICOLON       reduce using rule 29 (E -> V LT V .)


state 53

    (27) E -> V LT FLOATNUM .

    LOOP            reduce using rule 27 (E -> V LT FLOATNUM .)
    THEN            reduce using rule 27 (E -> V LT FLOATNUM .)
    SEMICOLON       reduce using rule 27 (E -> V LT FLOATNUM .)


state 54

    (28) E -> V LT NUMBER .

    LOOP            reduce using rule 28 (E -> V LT NUMBER .)
    THEN            reduce using rule 28 (E -> V LT NUMBER .)
    SEMICOLON       reduce using rule 28 (E -> V LT NUMBER .)


state 55

    (30) E -> V EQUAL FLOATNUM .

    LOOP            reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    THEN            reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    SEMICOLON       reduce using rule 30 (E -> V EQUAL FLOATNUM .)


state 56

    (31) E -> V EQUAL NUMBER .

    LOOP            reduce using rule 31 (E -> V EQUAL NUMBER .)
    THEN            reduce using rule 31 (E -> V EQUAL NUMBER .)
    SEMICOLON       reduce using rule 31 (E -> V EQUAL NUMBER .)


state 57

    (34) E -> V PLUS V .

    LOOP            reduce using rule 34 (E -> V PLUS V .)
    THEN            reduce using rule 34 (E -> V PLUS V .)
    SEMICOLON       reduce using rule 34 (E -> V PLUS V .)


state 58

    (32) E -> V PLUS FLOATNUM .

    LOOP            reduce using rule 32 (E -> V PLUS FLOATNUM .)
    THEN            reduce using rule 32 (E -> V PLUS FLOATNUM .)
    SEMICOLON       reduce using rule 32 (E -> V PLUS FLOATNUM .)


state 59

    (33) E -> V PLUS NUMBER .

    LOOP            reduce using rule 33 (E -> V PLUS NUMBER .)
    THEN            reduce using rule 33 (E -> V PLUS NUMBER .)
    SEMICOLON       reduce using rule 33 (E -> V PLUS NUMBER .)


state 60

    (37) E -> V MINUS V .

    LOOP            reduce using rule 37 (E -> V MINUS V .)
    THEN            reduce using rule 37 (E -> V MINUS V .)
    SEMICOLON       reduce using rule 37 (E -> V MINUS V .)


state 61

    (35) E -> V MINUS FLOATNUM .

    LOOP            reduce using rule 35 (E -> V MINUS FLOATNUM .)
    THEN            reduce using rule 35 (E -> V MINUS FLOATNUM .)
    SEMICOLON       reduce using rule 35 (E -> V MINUS FLOATNUM .)


state 62

    (36) E -> V MINUS NUMBER .

    LOOP            reduce using rule 36 (E -> V MINUS NUMBER .)
    THEN            reduce using rule 36 (E -> V MINUS NUMBER .)
    SEMICOLON       reduce using rule 36 (E -> V MINUS NUMBER .)


state 63

    (40) E -> V DIVIDE V .

    LOOP            reduce using rule 40 (E -> V DIVIDE V .)
    THEN            reduce using rule 40 (E -> V DIVIDE V .)
    SEMICOLON       reduce using rule 40 (E -> V DIVIDE V .)


state 64

    (38) E -> V DIVIDE FLOATNUM .

    LOOP            reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    THEN            reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    SEMICOLON       reduce using rule 38 (E -> V DIVIDE FLOATNUM .)


state 65

    (39) E -> V DIVIDE NUMBER .

    LOOP            reduce using rule 39 (E -> V DIVIDE NUMBER .)
    THEN            reduce using rule 39 (E -> V DIVIDE NUMBER .)
    SEMICOLON       reduce using rule 39 (E -> V DIVIDE NUMBER .)


state 66

    (43) E -> V TIMES V .

    LOOP            reduce using rule 43 (E -> V TIMES V .)
    THEN            reduce using rule 43 (E -> V TIMES V .)
    SEMICOLON       reduce using rule 43 (E -> V TIMES V .)


state 67

    (41) E -> V TIMES FLOATNUM .

    LOOP            reduce using rule 41 (E -> V TIMES FLOATNUM .)
    THEN            reduce using rule 41 (E -> V TIMES FLOATNUM .)
    SEMICOLON       reduce using rule 41 (E -> V TIMES FLOATNUM .)


state 68

    (42) E -> V TIMES NUMBER .

    LOOP            reduce using rule 42 (E -> V TIMES NUMBER .)
    THEN            reduce using rule 42 (E -> V TIMES NUMBER .)
    SEMICOLON       reduce using rule 42 (E -> V TIMES NUMBER .)


state 69

    (44) E -> V GTE V .

    LOOP            reduce using rule 44 (E -> V GTE V .)
    THEN            reduce using rule 44 (E -> V GTE V .)
    SEMICOLON       reduce using rule 44 (E -> V GTE V .)


state 70

    (45) E -> V GTE NUMBER .

    LOOP            reduce using rule 45 (E -> V GTE NUMBER .)
    THEN            reduce using rule 45 (E -> V GTE NUMBER .)
    SEMICOLON       reduce using rule 45 (E -> V GTE NUMBER .)


state 71

    (46) E -> V GTE FLOATNUM .

    LOOP            reduce using rule 46 (E -> V GTE FLOATNUM .)
    THEN            reduce using rule 46 (E -> V GTE FLOATNUM .)
    SEMICOLON       reduce using rule 46 (E -> V GTE FLOATNUM .)


state 72

    (47) E -> V LTE V .

    LOOP            reduce using rule 47 (E -> V LTE V .)
    THEN            reduce using rule 47 (E -> V LTE V .)
    SEMICOLON       reduce using rule 47 (E -> V LTE V .)


state 73

    (48) E -> V LTE NUMBER .

    LOOP            reduce using rule 48 (E -> V LTE NUMBER .)
    THEN            reduce using rule 48 (E -> V LTE NUMBER .)
    SEMICOLON       reduce using rule 48 (E -> V LTE NUMBER .)


state 74

    (49) E -> V LTE FLOATNUM .

    LOOP            reduce using rule 49 (E -> V LTE FLOATNUM .)
    THEN            reduce using rule 49 (E -> V LTE FLOATNUM .)
    SEMICOLON       reduce using rule 49 (E -> V LTE FLOATNUM .)


state 75

    (14) FORSTATEMENT -> FOR V IN R . LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN R . LOOP A END LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 86


state 76

    (50) R -> BRAOPEN . INT SUSPENSIVE INT BRACLOSE
    (51) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 87


state 77

    (2) IFSTATEMENT -> IF E THEN S . ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E THEN S . ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E THEN S . END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN S . ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN S . ELSE A END IF SEMICOLON NEWLINE

    ELSIF           shift and go to state 88
    ELSE            shift and go to state 90
    END             shift and go to state 89


state 78

    (7) IFSTATEMENT -> IF E THEN A . END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E THEN A . ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E THEN A . ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN A . ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN A . ELSE A END IF SEMICOLON NEWLINE

    END             shift and go to state 91
    ELSIF           shift and go to state 92
    ELSE            shift and go to state 93


state 79

    (53) V -> TYPE ID IS INT SEMICOLON .

    END             reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    GT              reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    LT              reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    EQUAL           reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    PLUS            reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    MINUS           reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    DIVIDE          reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    TIMES           reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    GTE             reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    LTE             reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    IN              reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    LOOP            reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    THEN            reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)
    SEMICOLON       reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON .)


state 80

    (54) V -> TYPE ID IS FLOAT SEMICOLON .

    END             reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    GT              reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    LT              reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    EQUAL           reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    PLUS            reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    MINUS           reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    DIVIDE          reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    TIMES           reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    GTE             reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    LTE             reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    IN              reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    LOOP            reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    THEN            reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)
    SEMICOLON       reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON .)


state 81

    (55) V -> TYPE ID IS ARRAY R . SEMICOLON

    SEMICOLON       shift and go to state 94


state 82

    (23) P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE .

    $end            reduce using rule 23 (P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE .)


state 83

    (12) WHILESTATEMENT -> WHILE E LOOP S END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 95


state 84

    (13) WHILESTATEMENT -> WHILE E LOOP A END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 96


state 85

    (19) A -> ID ASSIGN . E SEMICOLON NEWLINE
    (20) A -> ID ASSIGN . FLOATNUM SEMICOLON NEWLINE
    (21) A -> ID ASSIGN . NUMBER SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON
    (54) V -> . TYPE ID IS FLOAT SEMICOLON
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON
    (56) V -> . TYPE ID SEMICOLON

    FLOATNUM        shift and go to state 98
    NUMBER          shift and go to state 99
    TYPE            shift and go to state 9

    E                              shift and go to state 97
    V                              shift and go to state 22

state 86

    (14) FORSTATEMENT -> FOR V IN R LOOP . S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN R LOOP . A END LOOP SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    S                              shift and go to state 100
    A                              shift and go to state 101
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 87

    (50) R -> BRAOPEN INT . SUSPENSIVE INT BRACLOSE
    (51) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 102


state 88

    (2) IFSTATEMENT -> IF E THEN S ELSIF . S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN S ELSIF . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    S                              shift and go to state 103
    A                              shift and go to state 104
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 89

    (4) IFSTATEMENT -> IF E THEN S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 105


state 90

    (3) IFSTATEMENT -> IF E THEN S ELSE . S END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN S ELSE . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    S                              shift and go to state 106
    A                              shift and go to state 107
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 91

    (7) IFSTATEMENT -> IF E THEN A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 108


state 92

    (8) IFSTATEMENT -> IF E THEN A ELSIF . S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN A ELSIF . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    A                              shift and go to state 109
    S                              shift and go to state 110
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 93

    (9) IFSTATEMENT -> IF E THEN A ELSE . S END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN A ELSE . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 48
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 17

    A                              shift and go to state 111
    S                              shift and go to state 112
    WHILESTATEMENT                 shift and go to state 12
    FORSTATEMENT                   shift and go to state 13
    IFSTATEMENT                    shift and go to state 14

state 94

    (55) V -> TYPE ID IS ARRAY R SEMICOLON .

    END             reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    GT              reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    LT              reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    EQUAL           reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    PLUS            reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    MINUS           reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    DIVIDE          reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    TIMES           reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    GTE             reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    LTE             reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    IN              reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    LOOP            reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    THEN            reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)
    SEMICOLON       reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON .)


state 95

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 113


state 96

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 114


state 97

    (19) A -> ID ASSIGN E . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 115


state 98

    (20) A -> ID ASSIGN FLOATNUM . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 116


state 99

    (21) A -> ID ASSIGN NUMBER . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 117


state 100

    (14) FORSTATEMENT -> FOR V IN R LOOP S . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 118


state 101

    (15) FORSTATEMENT -> FOR V IN R LOOP A . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 119


state 102

    (50) R -> BRAOPEN INT SUSPENSIVE . INT BRACLOSE
    (51) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 120


state 103

    (2) IFSTATEMENT -> IF E THEN S ELSIF S . END IF SEMICOLON NEWLINE

    END             shift and go to state 121


state 104

    (5) IFSTATEMENT -> IF E THEN S ELSIF A . END IF SEMICOLON NEWLINE

    END             shift and go to state 122


state 105

    (4) IFSTATEMENT -> IF E THEN S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 123


state 106

    (3) IFSTATEMENT -> IF E THEN S ELSE S . END IF SEMICOLON NEWLINE

    END             shift and go to state 124


state 107

    (6) IFSTATEMENT -> IF E THEN S ELSE A . END IF SEMICOLON NEWLINE

    END             shift and go to state 125


state 108

    (7) IFSTATEMENT -> IF E THEN A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 126


state 109

    (10) IFSTATEMENT -> IF E THEN A ELSIF A . END IF SEMICOLON NEWLINE

    END             shift and go to state 127


state 110

    (8) IFSTATEMENT -> IF E THEN A ELSIF S . END IF SEMICOLON NEWLINE

    END             shift and go to state 128


state 111

    (11) IFSTATEMENT -> IF E THEN A ELSE A . END IF SEMICOLON NEWLINE

    END             shift and go to state 129


state 112

    (9) IFSTATEMENT -> IF E THEN A ELSE S . END IF SEMICOLON NEWLINE

    END             shift and go to state 130


state 113

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 131


state 114

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 132


state 115

    (19) A -> ID ASSIGN E SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 133


state 116

    (20) A -> ID ASSIGN FLOATNUM SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 134


state 117

    (21) A -> ID ASSIGN NUMBER SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 135


state 118

    (14) FORSTATEMENT -> FOR V IN R LOOP S END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 136


state 119

    (15) FORSTATEMENT -> FOR V IN R LOOP A END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 137


state 120

    (50) R -> BRAOPEN INT SUSPENSIVE INT . BRACLOSE
    (51) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 138
    COMMA           shift and go to state 139


state 121

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 140


state 122

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 141


state 123

    (4) IFSTATEMENT -> IF E THEN S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 142


state 124

    (3) IFSTATEMENT -> IF E THEN S ELSE S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 143


state 125

    (6) IFSTATEMENT -> IF E THEN S ELSE A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 144


state 126

    (7) IFSTATEMENT -> IF E THEN A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 145


state 127

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 146


state 128

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 147


state 129

    (11) IFSTATEMENT -> IF E THEN A ELSE A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 148


state 130

    (9) IFSTATEMENT -> IF E THEN A ELSE S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 149


state 131

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)


state 132

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)


state 133

    (19) A -> ID ASSIGN E SEMICOLON NEWLINE .

    END             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    ELSE            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)


state 134

    (20) A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .

    END             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    ELSE            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)


state 135

    (21) A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .

    END             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    ELSE            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)


state 136

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 150


state 137

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 151


state 138

    (50) R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 50 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 50 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)


state 139

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 152


state 140

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 153


state 141

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 154


state 142

    (4) IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .

    END             reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)


state 143

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 155


state 144

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 156


state 145

    (7) IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .

    END             reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)


state 146

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 157


state 147

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 158


state 148

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 159


state 149

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 160


state 150

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 161


state 151

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 162


state 152

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 163


state 153

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 164


state 154

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 165


state 155

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 166


state 156

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 167


state 157

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 168


state 158

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 169


state 159

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 170


state 160

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 171


state 161

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)


state 162

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)


state 163

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 172


state 164

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .

    END             reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)


state 165

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .

    END             reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)


state 166

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .

    END             reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)


state 167

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .

    END             reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)


state 168

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .

    END             reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)


state 169

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .

    END             reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)


state 170

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .

    END             reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)


state 171

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .

    END             reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)


state 172

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 174
    COMMA           shift and go to state 173


state 173

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 175


state 174

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 51 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 51 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)


state 175

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 176


state 176

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE

    INT             shift and go to state 177


state 177

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE

    BRACLOSE        shift and go to state 178


state 178

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 52 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 52 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)

