Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RANGE
    TAB
    USE

Grammar

Rule 0     S' -> P
Rule 1     P -> WITH P
Rule 2     IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
Rule 3     IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE
Rule 4     IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE
Rule 5     IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
Rule 6     IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE
Rule 7     IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE
Rule 8     IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
Rule 9     IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE
Rule 10    IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
Rule 11    IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE
Rule 12    WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE
Rule 13    WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE
Rule 14    FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
Rule 15    FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
Rule 16    S -> WHILESTATEMENT
Rule 17    S -> FORSTATEMENT
Rule 18    S -> IFSTATEMENT
Rule 19    A -> ID ASSIGN E SEMICOLON NEWLINE
Rule 20    A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE
Rule 21    A -> ID ASSIGN NUMBER SEMICOLON NEWLINE
Rule 22    P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE
Rule 23    P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE
Rule 24    E -> V GT FLOATNUM
Rule 25    E -> V GT NUMBER
Rule 26    E -> V GT V
Rule 27    E -> V LT FLOATNUM
Rule 28    E -> V LT NUMBER
Rule 29    E -> V LT V
Rule 30    E -> V EQUAL FLOATNUM
Rule 31    E -> V EQUAL NUMBER
Rule 32    E -> V PLUS FLOATNUM
Rule 33    E -> V PLUS NUMBER
Rule 34    E -> V PLUS V
Rule 35    E -> V MINUS FLOATNUM
Rule 36    E -> V MINUS NUMBER
Rule 37    E -> V MINUS V
Rule 38    E -> V DIVIDE FLOATNUM
Rule 39    E -> V DIVIDE NUMBER
Rule 40    E -> V DIVIDE V
Rule 41    E -> V TIMES FLOATNUM
Rule 42    E -> V TIMES NUMBER
Rule 43    E -> V TIMES V
Rule 44    E -> V GTE V
Rule 45    E -> V GTE NUMBER
Rule 46    E -> V GTE FLOATNUM
Rule 47    E -> V LTE V
Rule 48    E -> V LTE NUMBER
Rule 49    E -> V LTE FLOATNUM
Rule 50    E -> V AND V
Rule 51    E -> V OR V
Rule 52    E -> BRAOPEN V AND V BRACLOSE
Rule 53    E -> E BRAOPEN V OR V BRACLOSE
Rule 54    R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE
Rule 55    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 56    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 57    V -> TYPE ID IS INT SEMICOLON NEWLINE
Rule 58    V -> TYPE ID IS FLOAT SEMICOLON NEWLINE
Rule 59    V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE
Rule 60    V -> TYPE ID SEMICOLON NEWLINE
Rule 61    V -> A

Terminals, with rules where they appear

AND                  : 50 52
ARRAY                : 59
ASSIGN               : 19 20 21
BEGIN                : 23
BRACLOSE             : 52 53 54 55 56
BRAOPEN              : 52 53 54 55 56
COMMA                : 55 56 56
DIVIDE               : 38 39 40
ELSE                 : 3 6 9 11
ELSIF                : 2 5 8 10
END                  : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 22 23
EQUAL                : 30 31
FLOAT                : 58
FLOATNUM             : 20 24 27 30 32 35 38 41 46 49
FOR                  : 14 15
GT                   : 24 25 26
GTE                  : 44 45 46
ID                   : 19 20 21 22 22 23 23 57 58 59 60
IF                   : 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11
IN                   : 14 15
INT                  : 54 54 55 55 55 55 56 56 56 56 56 56 57
IS                   : 22 23 57 58 59
LOOP                 : 12 12 13 13 14 14 15 15
LT                   : 27 28 29
LTE                  : 47 48 49
MINUS                : 35 36 37
NEWLINE              : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20 21 22 23 57 58 59 60
NUMBER               : 21 25 28 31 33 36 39 42 45 48
OR                   : 51 53
PLUS                 : 32 33 34
PROCEDURE            : 22 23
RANGE                : 
SEMICOLON            : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20 21 22 23 57 58 59 60
SUSPENSIVE           : 54 55 55 56 56 56
TAB                  : 
THEN                 : 2 3 4 5 6 7 8 9 10 11
TIMES                : 41 42 43
TYPE                 : 57 58 59 60
USE                  : 
WHILE                : 12 13
WITH                 : 1
error                : 

Nonterminals, with rules where they appear

A                    : 5 6 7 8 9 10 10 11 11 13 15 61
E                    : 2 3 4 5 6 7 8 9 10 11 12 13 19 53
FORSTATEMENT         : 17
IFSTATEMENT          : 18
P                    : 1 0
R                    : 14 15 59
S                    : 2 2 3 3 4 5 6 8 9 12 14 23
V                    : 14 15 22 24 25 26 26 27 28 29 29 30 31 32 33 34 34 35 36 37 37 38 39 40 40 41 42 43 43 44 44 45 46 47 47 48 49 50 50 51 51 52 52 53 53
WHILESTATEMENT       : 16

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . WITH P
    (22) P -> . PROCEDURE ID IS V END ID SEMICOLON NEWLINE
    (23) P -> . PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 1

state 1

    (0) S' -> P .



state 2

    (1) P -> WITH . P
    (1) P -> . WITH P
    (22) P -> . PROCEDURE ID IS V END ID SEMICOLON NEWLINE
    (23) P -> . PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 4

state 3

    (22) P -> PROCEDURE . ID IS V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE . ID IS BEGIN S END ID SEMICOLON NEWLINE

    ID              shift and go to state 5


state 4

    (1) P -> WITH P .

    $end            reduce using rule 1 (P -> WITH P .)


state 5

    (22) P -> PROCEDURE ID . IS V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE ID . IS BEGIN S END ID SEMICOLON NEWLINE

    IS              shift and go to state 6


state 6

    (22) P -> PROCEDURE ID IS . V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE ID IS . BEGIN S END ID SEMICOLON NEWLINE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    BEGIN           shift and go to state 9
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 8
    A                              shift and go to state 11

state 7

    (19) A -> ID . ASSIGN E SEMICOLON NEWLINE
    (20) A -> ID . ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> ID . ASSIGN NUMBER SEMICOLON NEWLINE

    ASSIGN          shift and go to state 12


state 8

    (22) P -> PROCEDURE ID IS V . END ID SEMICOLON NEWLINE

    END             shift and go to state 13


state 9

    (23) P -> PROCEDURE ID IS BEGIN . S END ID SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 14
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 10

    (57) V -> TYPE . ID IS INT SEMICOLON NEWLINE
    (58) V -> TYPE . ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> TYPE . ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> TYPE . ID SEMICOLON NEWLINE

    ID              shift and go to state 21


state 11

    (61) V -> A .

    END             reduce using rule 61 (V -> A .)
    GT              reduce using rule 61 (V -> A .)
    LT              reduce using rule 61 (V -> A .)
    EQUAL           reduce using rule 61 (V -> A .)
    PLUS            reduce using rule 61 (V -> A .)
    MINUS           reduce using rule 61 (V -> A .)
    DIVIDE          reduce using rule 61 (V -> A .)
    TIMES           reduce using rule 61 (V -> A .)
    GTE             reduce using rule 61 (V -> A .)
    LTE             reduce using rule 61 (V -> A .)
    AND             reduce using rule 61 (V -> A .)
    OR              reduce using rule 61 (V -> A .)
    IN              reduce using rule 61 (V -> A .)
    SEMICOLON       reduce using rule 61 (V -> A .)
    BRAOPEN         reduce using rule 61 (V -> A .)
    LOOP            reduce using rule 61 (V -> A .)
    THEN            reduce using rule 61 (V -> A .)
    BRACLOSE        reduce using rule 61 (V -> A .)


state 12

    (19) A -> ID ASSIGN . E SEMICOLON NEWLINE
    (20) A -> ID ASSIGN . FLOATNUM SEMICOLON NEWLINE
    (21) A -> ID ASSIGN . NUMBER SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (50) E -> . V AND V
    (51) E -> . V OR V
    (52) E -> . BRAOPEN V AND V BRACLOSE
    (53) E -> . E BRAOPEN V OR V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 23
    NUMBER          shift and go to state 24
    BRAOPEN         shift and go to state 26
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    E                              shift and go to state 22
    V                              shift and go to state 25
    A                              shift and go to state 11

state 13

    (22) P -> PROCEDURE ID IS V END . ID SEMICOLON NEWLINE

    ID              shift and go to state 27


state 14

    (23) P -> PROCEDURE ID IS BEGIN S . END ID SEMICOLON NEWLINE

    END             shift and go to state 28


state 15

    (16) S -> WHILESTATEMENT .

    END             reduce using rule 16 (S -> WHILESTATEMENT .)
    ELSIF           reduce using rule 16 (S -> WHILESTATEMENT .)
    ELSE            reduce using rule 16 (S -> WHILESTATEMENT .)


state 16

    (17) S -> FORSTATEMENT .

    END             reduce using rule 17 (S -> FORSTATEMENT .)
    ELSIF           reduce using rule 17 (S -> FORSTATEMENT .)
    ELSE            reduce using rule 17 (S -> FORSTATEMENT .)


state 17

    (18) S -> IFSTATEMENT .

    END             reduce using rule 18 (S -> IFSTATEMENT .)
    ELSIF           reduce using rule 18 (S -> IFSTATEMENT .)
    ELSE            reduce using rule 18 (S -> IFSTATEMENT .)


state 18

    (12) WHILESTATEMENT -> WHILE . E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE . E LOOP A END LOOP SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (50) E -> . V AND V
    (51) E -> . V OR V
    (52) E -> . BRAOPEN V AND V BRACLOSE
    (53) E -> . E BRAOPEN V OR V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    BRAOPEN         shift and go to state 26
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    E                              shift and go to state 29
    A                              shift and go to state 11
    V                              shift and go to state 25

state 19

    (14) FORSTATEMENT -> FOR . V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR . V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 30
    A                              shift and go to state 11

state 20

    (2) IFSTATEMENT -> IF . E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF . E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF . E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF . E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF . E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF . E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF . E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF . E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF . E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF . E THEN A ELSE A END IF SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (50) E -> . V AND V
    (51) E -> . V OR V
    (52) E -> . BRAOPEN V AND V BRACLOSE
    (53) E -> . E BRAOPEN V OR V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    BRAOPEN         shift and go to state 26
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    E                              shift and go to state 31
    A                              shift and go to state 11
    V                              shift and go to state 25

state 21

    (57) V -> TYPE ID . IS INT SEMICOLON NEWLINE
    (58) V -> TYPE ID . IS FLOAT SEMICOLON NEWLINE
    (59) V -> TYPE ID . IS ARRAY R SEMICOLON NEWLINE
    (60) V -> TYPE ID . SEMICOLON NEWLINE

    IS              shift and go to state 32
    SEMICOLON       shift and go to state 33


state 22

    (19) A -> ID ASSIGN E . SEMICOLON NEWLINE
    (53) E -> E . BRAOPEN V OR V BRACLOSE

    SEMICOLON       shift and go to state 34
    BRAOPEN         shift and go to state 35


state 23

    (20) A -> ID ASSIGN FLOATNUM . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 36


state 24

    (21) A -> ID ASSIGN NUMBER . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 37


state 25

    (24) E -> V . GT FLOATNUM
    (25) E -> V . GT NUMBER
    (26) E -> V . GT V
    (27) E -> V . LT FLOATNUM
    (28) E -> V . LT NUMBER
    (29) E -> V . LT V
    (30) E -> V . EQUAL FLOATNUM
    (31) E -> V . EQUAL NUMBER
    (32) E -> V . PLUS FLOATNUM
    (33) E -> V . PLUS NUMBER
    (34) E -> V . PLUS V
    (35) E -> V . MINUS FLOATNUM
    (36) E -> V . MINUS NUMBER
    (37) E -> V . MINUS V
    (38) E -> V . DIVIDE FLOATNUM
    (39) E -> V . DIVIDE NUMBER
    (40) E -> V . DIVIDE V
    (41) E -> V . TIMES FLOATNUM
    (42) E -> V . TIMES NUMBER
    (43) E -> V . TIMES V
    (44) E -> V . GTE V
    (45) E -> V . GTE NUMBER
    (46) E -> V . GTE FLOATNUM
    (47) E -> V . LTE V
    (48) E -> V . LTE NUMBER
    (49) E -> V . LTE FLOATNUM
    (50) E -> V . AND V
    (51) E -> V . OR V

    GT              shift and go to state 38
    LT              shift and go to state 39
    EQUAL           shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    DIVIDE          shift and go to state 43
    TIMES           shift and go to state 44
    GTE             shift and go to state 45
    LTE             shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 26

    (52) E -> BRAOPEN . V AND V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 49
    A                              shift and go to state 11

state 27

    (22) P -> PROCEDURE ID IS V END ID . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 50


state 28

    (23) P -> PROCEDURE ID IS BEGIN S END . ID SEMICOLON NEWLINE

    ID              shift and go to state 51


state 29

    (12) WHILESTATEMENT -> WHILE E . LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE E . LOOP A END LOOP SEMICOLON NEWLINE
    (53) E -> E . BRAOPEN V OR V BRACLOSE

    LOOP            shift and go to state 52
    BRAOPEN         shift and go to state 35


state 30

    (14) FORSTATEMENT -> FOR V . IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V . IN R LOOP A END LOOP SEMICOLON NEWLINE

    IN              shift and go to state 53


state 31

    (2) IFSTATEMENT -> IF E . THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E . THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E . THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E . THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E . THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF E . THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E . THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E . THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E . THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E . THEN A ELSE A END IF SEMICOLON NEWLINE
    (53) E -> E . BRAOPEN V OR V BRACLOSE

    THEN            shift and go to state 54
    BRAOPEN         shift and go to state 35


state 32

    (57) V -> TYPE ID IS . INT SEMICOLON NEWLINE
    (58) V -> TYPE ID IS . FLOAT SEMICOLON NEWLINE
    (59) V -> TYPE ID IS . ARRAY R SEMICOLON NEWLINE

    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    ARRAY           shift and go to state 57


state 33

    (60) V -> TYPE ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 58


state 34

    (19) A -> ID ASSIGN E SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 59


state 35

    (53) E -> E BRAOPEN . V OR V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 60
    A                              shift and go to state 11

state 36

    (20) A -> ID ASSIGN FLOATNUM SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 61


state 37

    (21) A -> ID ASSIGN NUMBER SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 62


state 38

    (24) E -> V GT . FLOATNUM
    (25) E -> V GT . NUMBER
    (26) E -> V GT . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 64
    NUMBER          shift and go to state 65
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 63
    A                              shift and go to state 11

state 39

    (27) E -> V LT . FLOATNUM
    (28) E -> V LT . NUMBER
    (29) E -> V LT . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 67
    NUMBER          shift and go to state 68
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 66
    A                              shift and go to state 11

state 40

    (30) E -> V EQUAL . FLOATNUM
    (31) E -> V EQUAL . NUMBER

    FLOATNUM        shift and go to state 69
    NUMBER          shift and go to state 70


state 41

    (32) E -> V PLUS . FLOATNUM
    (33) E -> V PLUS . NUMBER
    (34) E -> V PLUS . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 72
    NUMBER          shift and go to state 73
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 71
    A                              shift and go to state 11

state 42

    (35) E -> V MINUS . FLOATNUM
    (36) E -> V MINUS . NUMBER
    (37) E -> V MINUS . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 75
    NUMBER          shift and go to state 76
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 74
    A                              shift and go to state 11

state 43

    (38) E -> V DIVIDE . FLOATNUM
    (39) E -> V DIVIDE . NUMBER
    (40) E -> V DIVIDE . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 78
    NUMBER          shift and go to state 79
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 77
    A                              shift and go to state 11

state 44

    (41) E -> V TIMES . FLOATNUM
    (42) E -> V TIMES . NUMBER
    (43) E -> V TIMES . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 81
    NUMBER          shift and go to state 82
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 80
    A                              shift and go to state 11

state 45

    (44) E -> V GTE . V
    (45) E -> V GTE . NUMBER
    (46) E -> V GTE . FLOATNUM
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    NUMBER          shift and go to state 84
    FLOATNUM        shift and go to state 85
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 83
    A                              shift and go to state 11

state 46

    (47) E -> V LTE . V
    (48) E -> V LTE . NUMBER
    (49) E -> V LTE . FLOATNUM
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    NUMBER          shift and go to state 87
    FLOATNUM        shift and go to state 88
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 86
    A                              shift and go to state 11

state 47

    (50) E -> V AND . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 89
    A                              shift and go to state 11

state 48

    (51) E -> V OR . V
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 90
    A                              shift and go to state 11

state 49

    (52) E -> BRAOPEN V . AND V BRACLOSE

    AND             shift and go to state 91


state 50

    (22) P -> PROCEDURE ID IS V END ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 92


state 51

    (23) P -> PROCEDURE ID IS BEGIN S END ID . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 93


state 52

    (12) WHILESTATEMENT -> WHILE E LOOP . S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE E LOOP . A END LOOP SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 94
    A                              shift and go to state 95
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 53

    (14) FORSTATEMENT -> FOR V IN . R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN . R LOOP A END LOOP SEMICOLON NEWLINE
    (54) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (55) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (56) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 97

    R                              shift and go to state 96

state 54

    (2) IFSTATEMENT -> IF E THEN . S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E THEN . S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E THEN . S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN . S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN . S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF E THEN . A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E THEN . A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E THEN . A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN . A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN . A ELSE A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 98
    A                              shift and go to state 99
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 55

    (57) V -> TYPE ID IS INT . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 100


state 56

    (58) V -> TYPE ID IS FLOAT . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 101


state 57

    (59) V -> TYPE ID IS ARRAY . R SEMICOLON NEWLINE
    (54) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (55) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (56) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 97

    R                              shift and go to state 102

state 58

    (60) V -> TYPE ID SEMICOLON NEWLINE .

    END             reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    GT              reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    LT              reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    PLUS            reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    MINUS           reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    TIMES           reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    GTE             reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    LTE             reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    AND             reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    OR              reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    IN              reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    LOOP            reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    THEN            reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 60 (V -> TYPE ID SEMICOLON NEWLINE .)


state 59

    (19) A -> ID ASSIGN E SEMICOLON NEWLINE .

    END             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    GT              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    LT              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    PLUS            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    MINUS           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    TIMES           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    GTE             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    LTE             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    AND             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    OR              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    IN              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    LOOP            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    THEN            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    ELSE            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)


state 60

    (53) E -> E BRAOPEN V . OR V BRACLOSE

    OR              shift and go to state 103


state 61

    (20) A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .

    END             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    GT              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    LT              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    PLUS            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    MINUS           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    TIMES           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    GTE             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    LTE             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    AND             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    OR              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    IN              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    LOOP            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    THEN            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    ELSE            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)


state 62

    (21) A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .

    END             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    GT              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    LT              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    PLUS            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    MINUS           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    TIMES           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    GTE             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    LTE             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    AND             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    OR              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    IN              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    LOOP            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    THEN            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    ELSE            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)


state 63

    (26) E -> V GT V .

    SEMICOLON       reduce using rule 26 (E -> V GT V .)
    BRAOPEN         reduce using rule 26 (E -> V GT V .)
    LOOP            reduce using rule 26 (E -> V GT V .)
    THEN            reduce using rule 26 (E -> V GT V .)


state 64

    (24) E -> V GT FLOATNUM .

    SEMICOLON       reduce using rule 24 (E -> V GT FLOATNUM .)
    BRAOPEN         reduce using rule 24 (E -> V GT FLOATNUM .)
    LOOP            reduce using rule 24 (E -> V GT FLOATNUM .)
    THEN            reduce using rule 24 (E -> V GT FLOATNUM .)


state 65

    (25) E -> V GT NUMBER .

    SEMICOLON       reduce using rule 25 (E -> V GT NUMBER .)
    BRAOPEN         reduce using rule 25 (E -> V GT NUMBER .)
    LOOP            reduce using rule 25 (E -> V GT NUMBER .)
    THEN            reduce using rule 25 (E -> V GT NUMBER .)


state 66

    (29) E -> V LT V .

    SEMICOLON       reduce using rule 29 (E -> V LT V .)
    BRAOPEN         reduce using rule 29 (E -> V LT V .)
    LOOP            reduce using rule 29 (E -> V LT V .)
    THEN            reduce using rule 29 (E -> V LT V .)


state 67

    (27) E -> V LT FLOATNUM .

    SEMICOLON       reduce using rule 27 (E -> V LT FLOATNUM .)
    BRAOPEN         reduce using rule 27 (E -> V LT FLOATNUM .)
    LOOP            reduce using rule 27 (E -> V LT FLOATNUM .)
    THEN            reduce using rule 27 (E -> V LT FLOATNUM .)


state 68

    (28) E -> V LT NUMBER .

    SEMICOLON       reduce using rule 28 (E -> V LT NUMBER .)
    BRAOPEN         reduce using rule 28 (E -> V LT NUMBER .)
    LOOP            reduce using rule 28 (E -> V LT NUMBER .)
    THEN            reduce using rule 28 (E -> V LT NUMBER .)


state 69

    (30) E -> V EQUAL FLOATNUM .

    SEMICOLON       reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    BRAOPEN         reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    LOOP            reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    THEN            reduce using rule 30 (E -> V EQUAL FLOATNUM .)


state 70

    (31) E -> V EQUAL NUMBER .

    SEMICOLON       reduce using rule 31 (E -> V EQUAL NUMBER .)
    BRAOPEN         reduce using rule 31 (E -> V EQUAL NUMBER .)
    LOOP            reduce using rule 31 (E -> V EQUAL NUMBER .)
    THEN            reduce using rule 31 (E -> V EQUAL NUMBER .)


state 71

    (34) E -> V PLUS V .

    SEMICOLON       reduce using rule 34 (E -> V PLUS V .)
    BRAOPEN         reduce using rule 34 (E -> V PLUS V .)
    LOOP            reduce using rule 34 (E -> V PLUS V .)
    THEN            reduce using rule 34 (E -> V PLUS V .)


state 72

    (32) E -> V PLUS FLOATNUM .

    SEMICOLON       reduce using rule 32 (E -> V PLUS FLOATNUM .)
    BRAOPEN         reduce using rule 32 (E -> V PLUS FLOATNUM .)
    LOOP            reduce using rule 32 (E -> V PLUS FLOATNUM .)
    THEN            reduce using rule 32 (E -> V PLUS FLOATNUM .)


state 73

    (33) E -> V PLUS NUMBER .

    SEMICOLON       reduce using rule 33 (E -> V PLUS NUMBER .)
    BRAOPEN         reduce using rule 33 (E -> V PLUS NUMBER .)
    LOOP            reduce using rule 33 (E -> V PLUS NUMBER .)
    THEN            reduce using rule 33 (E -> V PLUS NUMBER .)


state 74

    (37) E -> V MINUS V .

    SEMICOLON       reduce using rule 37 (E -> V MINUS V .)
    BRAOPEN         reduce using rule 37 (E -> V MINUS V .)
    LOOP            reduce using rule 37 (E -> V MINUS V .)
    THEN            reduce using rule 37 (E -> V MINUS V .)


state 75

    (35) E -> V MINUS FLOATNUM .

    SEMICOLON       reduce using rule 35 (E -> V MINUS FLOATNUM .)
    BRAOPEN         reduce using rule 35 (E -> V MINUS FLOATNUM .)
    LOOP            reduce using rule 35 (E -> V MINUS FLOATNUM .)
    THEN            reduce using rule 35 (E -> V MINUS FLOATNUM .)


state 76

    (36) E -> V MINUS NUMBER .

    SEMICOLON       reduce using rule 36 (E -> V MINUS NUMBER .)
    BRAOPEN         reduce using rule 36 (E -> V MINUS NUMBER .)
    LOOP            reduce using rule 36 (E -> V MINUS NUMBER .)
    THEN            reduce using rule 36 (E -> V MINUS NUMBER .)


state 77

    (40) E -> V DIVIDE V .

    SEMICOLON       reduce using rule 40 (E -> V DIVIDE V .)
    BRAOPEN         reduce using rule 40 (E -> V DIVIDE V .)
    LOOP            reduce using rule 40 (E -> V DIVIDE V .)
    THEN            reduce using rule 40 (E -> V DIVIDE V .)


state 78

    (38) E -> V DIVIDE FLOATNUM .

    SEMICOLON       reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    BRAOPEN         reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    LOOP            reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    THEN            reduce using rule 38 (E -> V DIVIDE FLOATNUM .)


state 79

    (39) E -> V DIVIDE NUMBER .

    SEMICOLON       reduce using rule 39 (E -> V DIVIDE NUMBER .)
    BRAOPEN         reduce using rule 39 (E -> V DIVIDE NUMBER .)
    LOOP            reduce using rule 39 (E -> V DIVIDE NUMBER .)
    THEN            reduce using rule 39 (E -> V DIVIDE NUMBER .)


state 80

    (43) E -> V TIMES V .

    SEMICOLON       reduce using rule 43 (E -> V TIMES V .)
    BRAOPEN         reduce using rule 43 (E -> V TIMES V .)
    LOOP            reduce using rule 43 (E -> V TIMES V .)
    THEN            reduce using rule 43 (E -> V TIMES V .)


state 81

    (41) E -> V TIMES FLOATNUM .

    SEMICOLON       reduce using rule 41 (E -> V TIMES FLOATNUM .)
    BRAOPEN         reduce using rule 41 (E -> V TIMES FLOATNUM .)
    LOOP            reduce using rule 41 (E -> V TIMES FLOATNUM .)
    THEN            reduce using rule 41 (E -> V TIMES FLOATNUM .)


state 82

    (42) E -> V TIMES NUMBER .

    SEMICOLON       reduce using rule 42 (E -> V TIMES NUMBER .)
    BRAOPEN         reduce using rule 42 (E -> V TIMES NUMBER .)
    LOOP            reduce using rule 42 (E -> V TIMES NUMBER .)
    THEN            reduce using rule 42 (E -> V TIMES NUMBER .)


state 83

    (44) E -> V GTE V .

    SEMICOLON       reduce using rule 44 (E -> V GTE V .)
    BRAOPEN         reduce using rule 44 (E -> V GTE V .)
    LOOP            reduce using rule 44 (E -> V GTE V .)
    THEN            reduce using rule 44 (E -> V GTE V .)


state 84

    (45) E -> V GTE NUMBER .

    SEMICOLON       reduce using rule 45 (E -> V GTE NUMBER .)
    BRAOPEN         reduce using rule 45 (E -> V GTE NUMBER .)
    LOOP            reduce using rule 45 (E -> V GTE NUMBER .)
    THEN            reduce using rule 45 (E -> V GTE NUMBER .)


state 85

    (46) E -> V GTE FLOATNUM .

    SEMICOLON       reduce using rule 46 (E -> V GTE FLOATNUM .)
    BRAOPEN         reduce using rule 46 (E -> V GTE FLOATNUM .)
    LOOP            reduce using rule 46 (E -> V GTE FLOATNUM .)
    THEN            reduce using rule 46 (E -> V GTE FLOATNUM .)


state 86

    (47) E -> V LTE V .

    SEMICOLON       reduce using rule 47 (E -> V LTE V .)
    BRAOPEN         reduce using rule 47 (E -> V LTE V .)
    LOOP            reduce using rule 47 (E -> V LTE V .)
    THEN            reduce using rule 47 (E -> V LTE V .)


state 87

    (48) E -> V LTE NUMBER .

    SEMICOLON       reduce using rule 48 (E -> V LTE NUMBER .)
    BRAOPEN         reduce using rule 48 (E -> V LTE NUMBER .)
    LOOP            reduce using rule 48 (E -> V LTE NUMBER .)
    THEN            reduce using rule 48 (E -> V LTE NUMBER .)


state 88

    (49) E -> V LTE FLOATNUM .

    SEMICOLON       reduce using rule 49 (E -> V LTE FLOATNUM .)
    BRAOPEN         reduce using rule 49 (E -> V LTE FLOATNUM .)
    LOOP            reduce using rule 49 (E -> V LTE FLOATNUM .)
    THEN            reduce using rule 49 (E -> V LTE FLOATNUM .)


state 89

    (50) E -> V AND V .

    SEMICOLON       reduce using rule 50 (E -> V AND V .)
    BRAOPEN         reduce using rule 50 (E -> V AND V .)
    LOOP            reduce using rule 50 (E -> V AND V .)
    THEN            reduce using rule 50 (E -> V AND V .)


state 90

    (51) E -> V OR V .

    SEMICOLON       reduce using rule 51 (E -> V OR V .)
    BRAOPEN         reduce using rule 51 (E -> V OR V .)
    LOOP            reduce using rule 51 (E -> V OR V .)
    THEN            reduce using rule 51 (E -> V OR V .)


state 91

    (52) E -> BRAOPEN V AND . V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 104
    A                              shift and go to state 11

state 92

    (22) P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE .

    $end            reduce using rule 22 (P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE .)


state 93

    (23) P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 105


state 94

    (12) WHILESTATEMENT -> WHILE E LOOP S . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 106


state 95

    (13) WHILESTATEMENT -> WHILE E LOOP A . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 107


state 96

    (14) FORSTATEMENT -> FOR V IN R . LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN R . LOOP A END LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 108


state 97

    (54) R -> BRAOPEN . INT SUSPENSIVE INT BRACLOSE
    (55) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (56) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 109


state 98

    (2) IFSTATEMENT -> IF E THEN S . ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E THEN S . ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E THEN S . END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN S . ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN S . ELSE A END IF SEMICOLON NEWLINE

    ELSIF           shift and go to state 110
    ELSE            shift and go to state 112
    END             shift and go to state 111


state 99

    (7) IFSTATEMENT -> IF E THEN A . END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E THEN A . ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E THEN A . ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN A . ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN A . ELSE A END IF SEMICOLON NEWLINE

    END             shift and go to state 113
    ELSIF           shift and go to state 114
    ELSE            shift and go to state 115


state 100

    (57) V -> TYPE ID IS INT SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 116


state 101

    (58) V -> TYPE ID IS FLOAT SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 117


state 102

    (59) V -> TYPE ID IS ARRAY R . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 118


state 103

    (53) E -> E BRAOPEN V OR . V BRACLOSE
    (57) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (58) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (59) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (60) V -> . TYPE ID SEMICOLON NEWLINE
    (61) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 119
    A                              shift and go to state 11

state 104

    (52) E -> BRAOPEN V AND V . BRACLOSE

    BRACLOSE        shift and go to state 120


state 105

    (23) P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE .

    $end            reduce using rule 23 (P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE .)


state 106

    (12) WHILESTATEMENT -> WHILE E LOOP S END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 121


state 107

    (13) WHILESTATEMENT -> WHILE E LOOP A END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 122


state 108

    (14) FORSTATEMENT -> FOR V IN R LOOP . S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN R LOOP . A END LOOP SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 123
    A                              shift and go to state 124
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 109

    (54) R -> BRAOPEN INT . SUSPENSIVE INT BRACLOSE
    (55) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (56) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 125


state 110

    (2) IFSTATEMENT -> IF E THEN S ELSIF . S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN S ELSIF . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 126
    A                              shift and go to state 127
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 111

    (4) IFSTATEMENT -> IF E THEN S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 128


state 112

    (3) IFSTATEMENT -> IF E THEN S ELSE . S END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN S ELSE . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 129
    A                              shift and go to state 130
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 113

    (7) IFSTATEMENT -> IF E THEN A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 131


state 114

    (8) IFSTATEMENT -> IF E THEN A ELSIF . S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN A ELSIF . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    A                              shift and go to state 132
    S                              shift and go to state 133
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 115

    (9) IFSTATEMENT -> IF E THEN A ELSE . S END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN A ELSE . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    A                              shift and go to state 134
    S                              shift and go to state 135
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 116

    (57) V -> TYPE ID IS INT SEMICOLON NEWLINE .

    END             reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    GT              reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    LT              reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    PLUS            reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    MINUS           reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    TIMES           reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    GTE             reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    LTE             reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    AND             reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    OR              reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    IN              reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    LOOP            reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    THEN            reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 57 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)


state 117

    (58) V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .

    END             reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    GT              reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    LT              reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    PLUS            reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    MINUS           reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    TIMES           reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    GTE             reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    LTE             reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    AND             reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    OR              reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    IN              reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    LOOP            reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    THEN            reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 58 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)


state 118

    (59) V -> TYPE ID IS ARRAY R SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 136


state 119

    (53) E -> E BRAOPEN V OR V . BRACLOSE

    BRACLOSE        shift and go to state 137


state 120

    (52) E -> BRAOPEN V AND V BRACLOSE .

    SEMICOLON       reduce using rule 52 (E -> BRAOPEN V AND V BRACLOSE .)
    BRAOPEN         reduce using rule 52 (E -> BRAOPEN V AND V BRACLOSE .)
    LOOP            reduce using rule 52 (E -> BRAOPEN V AND V BRACLOSE .)
    THEN            reduce using rule 52 (E -> BRAOPEN V AND V BRACLOSE .)


state 121

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 138


state 122

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 139


state 123

    (14) FORSTATEMENT -> FOR V IN R LOOP S . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 140


state 124

    (15) FORSTATEMENT -> FOR V IN R LOOP A . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 141


state 125

    (54) R -> BRAOPEN INT SUSPENSIVE . INT BRACLOSE
    (55) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE
    (56) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 142


state 126

    (2) IFSTATEMENT -> IF E THEN S ELSIF S . END IF SEMICOLON NEWLINE

    END             shift and go to state 143


state 127

    (5) IFSTATEMENT -> IF E THEN S ELSIF A . END IF SEMICOLON NEWLINE

    END             shift and go to state 144


state 128

    (4) IFSTATEMENT -> IF E THEN S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 145


state 129

    (3) IFSTATEMENT -> IF E THEN S ELSE S . END IF SEMICOLON NEWLINE

    END             shift and go to state 146


state 130

    (6) IFSTATEMENT -> IF E THEN S ELSE A . END IF SEMICOLON NEWLINE

    END             shift and go to state 147


state 131

    (7) IFSTATEMENT -> IF E THEN A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 148


state 132

    (10) IFSTATEMENT -> IF E THEN A ELSIF A . END IF SEMICOLON NEWLINE

    END             shift and go to state 149


state 133

    (8) IFSTATEMENT -> IF E THEN A ELSIF S . END IF SEMICOLON NEWLINE

    END             shift and go to state 150


state 134

    (11) IFSTATEMENT -> IF E THEN A ELSE A . END IF SEMICOLON NEWLINE

    END             shift and go to state 151


state 135

    (9) IFSTATEMENT -> IF E THEN A ELSE S . END IF SEMICOLON NEWLINE

    END             shift and go to state 152


state 136

    (59) V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .

    END             reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    GT              reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    LT              reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    PLUS            reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    MINUS           reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    TIMES           reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    GTE             reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    LTE             reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    AND             reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    OR              reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    IN              reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    BRAOPEN         reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    LOOP            reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    THEN            reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    BRACLOSE        reduce using rule 59 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)


state 137

    (53) E -> E BRAOPEN V OR V BRACLOSE .

    SEMICOLON       reduce using rule 53 (E -> E BRAOPEN V OR V BRACLOSE .)
    BRAOPEN         reduce using rule 53 (E -> E BRAOPEN V OR V BRACLOSE .)
    LOOP            reduce using rule 53 (E -> E BRAOPEN V OR V BRACLOSE .)
    THEN            reduce using rule 53 (E -> E BRAOPEN V OR V BRACLOSE .)


state 138

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 153


state 139

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 154


state 140

    (14) FORSTATEMENT -> FOR V IN R LOOP S END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 155


state 141

    (15) FORSTATEMENT -> FOR V IN R LOOP A END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 156


state 142

    (54) R -> BRAOPEN INT SUSPENSIVE INT . BRACLOSE
    (55) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE
    (56) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 157
    COMMA           shift and go to state 158


state 143

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 159


state 144

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 160


state 145

    (4) IFSTATEMENT -> IF E THEN S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 161


state 146

    (3) IFSTATEMENT -> IF E THEN S ELSE S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 162


state 147

    (6) IFSTATEMENT -> IF E THEN S ELSE A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 163


state 148

    (7) IFSTATEMENT -> IF E THEN A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 164


state 149

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 165


state 150

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 166


state 151

    (11) IFSTATEMENT -> IF E THEN A ELSE A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 167


state 152

    (9) IFSTATEMENT -> IF E THEN A ELSE S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 168


state 153

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)


state 154

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)


state 155

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 169


state 156

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 170


state 157

    (54) R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 54 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 54 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)


state 158

    (55) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE
    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 171


state 159

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 172


state 160

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 173


state 161

    (4) IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .

    END             reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)


state 162

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 174


state 163

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 175


state 164

    (7) IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .

    END             reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)


state 165

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 176


state 166

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 177


state 167

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 178


state 168

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 179


state 169

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 180


state 170

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 181


state 171

    (55) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE
    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 182


state 172

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 183


state 173

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 184


state 174

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 185


state 175

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 186


state 176

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 187


state 177

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 188


state 178

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 189


state 179

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 190


state 180

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)


state 181

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)


state 182

    (55) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE
    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 191


state 183

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .

    END             reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)


state 184

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .

    END             reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)


state 185

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .

    END             reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)


state 186

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .

    END             reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)


state 187

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .

    END             reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)


state 188

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .

    END             reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)


state 189

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .

    END             reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)


state 190

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .

    END             reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)


state 191

    (55) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE
    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 193
    COMMA           shift and go to state 192


state 192

    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 194


state 193

    (55) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 55 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 55 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)


state 194

    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 195


state 195

    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE

    INT             shift and go to state 196


state 196

    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE

    BRACLOSE        shift and go to state 197


state 197

    (56) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 56 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 56 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)

