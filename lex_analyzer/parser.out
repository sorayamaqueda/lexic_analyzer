Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RANGE
    TAB
    USE

Grammar

Rule 0     S' -> P
Rule 1     P -> WITH P
Rule 2     IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
Rule 3     IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE
Rule 4     IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE
Rule 5     IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
Rule 6     IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE
Rule 7     IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE
Rule 8     IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
Rule 9     IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE
Rule 10    IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
Rule 11    IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE
Rule 12    WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE
Rule 13    WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE
Rule 14    FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
Rule 15    FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
Rule 16    S -> WHILESTATEMENT
Rule 17    S -> FORSTATEMENT
Rule 18    S -> IFSTATEMENT
Rule 19    A -> ID ASSIGN E SEMICOLON NEWLINE
Rule 20    A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE
Rule 21    A -> ID ASSIGN NUMBER SEMICOLON NEWLINE
Rule 22    P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE
Rule 23    P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE
Rule 24    E -> V GT FLOATNUM
Rule 25    E -> V GT NUMBER
Rule 26    E -> V GT V
Rule 27    E -> V LT FLOATNUM
Rule 28    E -> V LT NUMBER
Rule 29    E -> V LT V
Rule 30    E -> V EQUAL FLOATNUM
Rule 31    E -> V EQUAL NUMBER
Rule 32    E -> V PLUS FLOATNUM
Rule 33    E -> V PLUS NUMBER
Rule 34    E -> V PLUS V
Rule 35    E -> V MINUS FLOATNUM
Rule 36    E -> V MINUS NUMBER
Rule 37    E -> V MINUS V
Rule 38    E -> V DIVIDE FLOATNUM
Rule 39    E -> V DIVIDE NUMBER
Rule 40    E -> V DIVIDE V
Rule 41    E -> V TIMES FLOATNUM
Rule 42    E -> V TIMES NUMBER
Rule 43    E -> V TIMES V
Rule 44    E -> V GTE V
Rule 45    E -> V GTE NUMBER
Rule 46    E -> V GTE FLOATNUM
Rule 47    E -> V LTE V
Rule 48    E -> V LTE NUMBER
Rule 49    E -> V LTE FLOATNUM
Rule 50    R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE
Rule 51    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 52    R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
Rule 53    V -> TYPE ID IS INT SEMICOLON NEWLINE
Rule 54    V -> TYPE ID IS FLOAT SEMICOLON NEWLINE
Rule 55    V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE
Rule 56    V -> TYPE ID SEMICOLON NEWLINE
Rule 57    V -> A

Terminals, with rules where they appear

ARRAY                : 55
ASSIGN               : 19 20 21
BEGIN                : 23
BRACLOSE             : 50 51 52
BRAOPEN              : 50 51 52
COMMA                : 51 52 52
DIVIDE               : 38 39 40
ELSE                 : 3 6 9 11
ELSIF                : 2 5 8 10
END                  : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 22 23
EQUAL                : 30 31
FLOAT                : 54
FLOATNUM             : 20 24 27 30 32 35 38 41 46 49
FOR                  : 14 15
GT                   : 24 25 26
GTE                  : 44 45 46
ID                   : 19 20 21 22 22 23 23 53 54 55 56
IF                   : 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11
IN                   : 14 15
INT                  : 50 50 51 51 51 51 52 52 52 52 52 52 53
IS                   : 22 23 53 54 55
LOOP                 : 12 12 13 13 14 14 15 15
LT                   : 27 28 29
LTE                  : 47 48 49
MINUS                : 35 36 37
NEWLINE              : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20 21 22 23 53 54 55 56
NUMBER               : 21 25 28 31 33 36 39 42 45 48
PLUS                 : 32 33 34
PROCEDURE            : 22 23
RANGE                : 
SEMICOLON            : 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 20 21 22 23 53 54 55 56
SUSPENSIVE           : 50 51 51 52 52 52
TAB                  : 
THEN                 : 2 3 4 5 6 7 8 9 10 11
TIMES                : 41 42 43
TYPE                 : 53 54 55 56
USE                  : 
WHILE                : 12 13
WITH                 : 1
error                : 

Nonterminals, with rules where they appear

A                    : 5 6 7 8 9 10 10 11 11 13 15 57
E                    : 2 3 4 5 6 7 8 9 10 11 12 13 19
FORSTATEMENT         : 17
IFSTATEMENT          : 18
P                    : 1 0
R                    : 14 15 55
S                    : 2 2 3 3 4 5 6 8 9 12 14 23
V                    : 14 15 22 24 25 26 26 27 28 29 29 30 31 32 33 34 34 35 36 37 37 38 39 40 40 41 42 43 43 44 44 45 46 47 47 48 49
WHILESTATEMENT       : 16

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . WITH P
    (22) P -> . PROCEDURE ID IS V END ID SEMICOLON NEWLINE
    (23) P -> . PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 1

state 1

    (0) S' -> P .



state 2

    (1) P -> WITH . P
    (1) P -> . WITH P
    (22) P -> . PROCEDURE ID IS V END ID SEMICOLON NEWLINE
    (23) P -> . PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE

    WITH            shift and go to state 2
    PROCEDURE       shift and go to state 3

    P                              shift and go to state 4

state 3

    (22) P -> PROCEDURE . ID IS V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE . ID IS BEGIN S END ID SEMICOLON NEWLINE

    ID              shift and go to state 5


state 4

    (1) P -> WITH P .

    $end            reduce using rule 1 (P -> WITH P .)


state 5

    (22) P -> PROCEDURE ID . IS V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE ID . IS BEGIN S END ID SEMICOLON NEWLINE

    IS              shift and go to state 6


state 6

    (22) P -> PROCEDURE ID IS . V END ID SEMICOLON NEWLINE
    (23) P -> PROCEDURE ID IS . BEGIN S END ID SEMICOLON NEWLINE
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    BEGIN           shift and go to state 9
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 8
    A                              shift and go to state 11

state 7

    (19) A -> ID . ASSIGN E SEMICOLON NEWLINE
    (20) A -> ID . ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> ID . ASSIGN NUMBER SEMICOLON NEWLINE

    ASSIGN          shift and go to state 12


state 8

    (22) P -> PROCEDURE ID IS V . END ID SEMICOLON NEWLINE

    END             shift and go to state 13


state 9

    (23) P -> PROCEDURE ID IS BEGIN . S END ID SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 14
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 10

    (53) V -> TYPE . ID IS INT SEMICOLON NEWLINE
    (54) V -> TYPE . ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> TYPE . ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> TYPE . ID SEMICOLON NEWLINE

    ID              shift and go to state 21


state 11

    (57) V -> A .

    END             reduce using rule 57 (V -> A .)
    GT              reduce using rule 57 (V -> A .)
    LT              reduce using rule 57 (V -> A .)
    EQUAL           reduce using rule 57 (V -> A .)
    PLUS            reduce using rule 57 (V -> A .)
    MINUS           reduce using rule 57 (V -> A .)
    DIVIDE          reduce using rule 57 (V -> A .)
    TIMES           reduce using rule 57 (V -> A .)
    GTE             reduce using rule 57 (V -> A .)
    LTE             reduce using rule 57 (V -> A .)
    IN              reduce using rule 57 (V -> A .)
    SEMICOLON       reduce using rule 57 (V -> A .)
    LOOP            reduce using rule 57 (V -> A .)
    THEN            reduce using rule 57 (V -> A .)


state 12

    (19) A -> ID ASSIGN . E SEMICOLON NEWLINE
    (20) A -> ID ASSIGN . FLOATNUM SEMICOLON NEWLINE
    (21) A -> ID ASSIGN . NUMBER SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 23
    NUMBER          shift and go to state 24
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    E                              shift and go to state 22
    V                              shift and go to state 25
    A                              shift and go to state 11

state 13

    (22) P -> PROCEDURE ID IS V END . ID SEMICOLON NEWLINE

    ID              shift and go to state 26


state 14

    (23) P -> PROCEDURE ID IS BEGIN S . END ID SEMICOLON NEWLINE

    END             shift and go to state 27


state 15

    (16) S -> WHILESTATEMENT .

    END             reduce using rule 16 (S -> WHILESTATEMENT .)
    ELSIF           reduce using rule 16 (S -> WHILESTATEMENT .)
    ELSE            reduce using rule 16 (S -> WHILESTATEMENT .)


state 16

    (17) S -> FORSTATEMENT .

    END             reduce using rule 17 (S -> FORSTATEMENT .)
    ELSIF           reduce using rule 17 (S -> FORSTATEMENT .)
    ELSE            reduce using rule 17 (S -> FORSTATEMENT .)


state 17

    (18) S -> IFSTATEMENT .

    END             reduce using rule 18 (S -> IFSTATEMENT .)
    ELSIF           reduce using rule 18 (S -> IFSTATEMENT .)
    ELSE            reduce using rule 18 (S -> IFSTATEMENT .)


state 18

    (12) WHILESTATEMENT -> WHILE . E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE . E LOOP A END LOOP SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    E                              shift and go to state 28
    A                              shift and go to state 11
    V                              shift and go to state 25

state 19

    (14) FORSTATEMENT -> FOR . V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR . V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 29
    A                              shift and go to state 11

state 20

    (2) IFSTATEMENT -> IF . E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF . E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF . E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF . E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF . E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF . E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF . E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF . E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF . E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF . E THEN A ELSE A END IF SEMICOLON NEWLINE
    (24) E -> . V GT FLOATNUM
    (25) E -> . V GT NUMBER
    (26) E -> . V GT V
    (27) E -> . V LT FLOATNUM
    (28) E -> . V LT NUMBER
    (29) E -> . V LT V
    (30) E -> . V EQUAL FLOATNUM
    (31) E -> . V EQUAL NUMBER
    (32) E -> . V PLUS FLOATNUM
    (33) E -> . V PLUS NUMBER
    (34) E -> . V PLUS V
    (35) E -> . V MINUS FLOATNUM
    (36) E -> . V MINUS NUMBER
    (37) E -> . V MINUS V
    (38) E -> . V DIVIDE FLOATNUM
    (39) E -> . V DIVIDE NUMBER
    (40) E -> . V DIVIDE V
    (41) E -> . V TIMES FLOATNUM
    (42) E -> . V TIMES NUMBER
    (43) E -> . V TIMES V
    (44) E -> . V GTE V
    (45) E -> . V GTE NUMBER
    (46) E -> . V GTE FLOATNUM
    (47) E -> . V LTE V
    (48) E -> . V LTE NUMBER
    (49) E -> . V LTE FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    TYPE            shift and go to state 10
    ID              shift and go to state 7

    E                              shift and go to state 30
    A                              shift and go to state 11
    V                              shift and go to state 25

state 21

    (53) V -> TYPE ID . IS INT SEMICOLON NEWLINE
    (54) V -> TYPE ID . IS FLOAT SEMICOLON NEWLINE
    (55) V -> TYPE ID . IS ARRAY R SEMICOLON NEWLINE
    (56) V -> TYPE ID . SEMICOLON NEWLINE

    IS              shift and go to state 31
    SEMICOLON       shift and go to state 32


state 22

    (19) A -> ID ASSIGN E . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 33


state 23

    (20) A -> ID ASSIGN FLOATNUM . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 34


state 24

    (21) A -> ID ASSIGN NUMBER . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 35


state 25

    (24) E -> V . GT FLOATNUM
    (25) E -> V . GT NUMBER
    (26) E -> V . GT V
    (27) E -> V . LT FLOATNUM
    (28) E -> V . LT NUMBER
    (29) E -> V . LT V
    (30) E -> V . EQUAL FLOATNUM
    (31) E -> V . EQUAL NUMBER
    (32) E -> V . PLUS FLOATNUM
    (33) E -> V . PLUS NUMBER
    (34) E -> V . PLUS V
    (35) E -> V . MINUS FLOATNUM
    (36) E -> V . MINUS NUMBER
    (37) E -> V . MINUS V
    (38) E -> V . DIVIDE FLOATNUM
    (39) E -> V . DIVIDE NUMBER
    (40) E -> V . DIVIDE V
    (41) E -> V . TIMES FLOATNUM
    (42) E -> V . TIMES NUMBER
    (43) E -> V . TIMES V
    (44) E -> V . GTE V
    (45) E -> V . GTE NUMBER
    (46) E -> V . GTE FLOATNUM
    (47) E -> V . LTE V
    (48) E -> V . LTE NUMBER
    (49) E -> V . LTE FLOATNUM

    GT              shift and go to state 36
    LT              shift and go to state 37
    EQUAL           shift and go to state 38
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    DIVIDE          shift and go to state 41
    TIMES           shift and go to state 42
    GTE             shift and go to state 43
    LTE             shift and go to state 44


state 26

    (22) P -> PROCEDURE ID IS V END ID . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 45


state 27

    (23) P -> PROCEDURE ID IS BEGIN S END . ID SEMICOLON NEWLINE

    ID              shift and go to state 46


state 28

    (12) WHILESTATEMENT -> WHILE E . LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE E . LOOP A END LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 47


state 29

    (14) FORSTATEMENT -> FOR V . IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V . IN R LOOP A END LOOP SEMICOLON NEWLINE

    IN              shift and go to state 48


state 30

    (2) IFSTATEMENT -> IF E . THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E . THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E . THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E . THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E . THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF E . THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E . THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E . THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E . THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E . THEN A ELSE A END IF SEMICOLON NEWLINE

    THEN            shift and go to state 49


state 31

    (53) V -> TYPE ID IS . INT SEMICOLON NEWLINE
    (54) V -> TYPE ID IS . FLOAT SEMICOLON NEWLINE
    (55) V -> TYPE ID IS . ARRAY R SEMICOLON NEWLINE

    INT             shift and go to state 50
    FLOAT           shift and go to state 51
    ARRAY           shift and go to state 52


state 32

    (56) V -> TYPE ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 53


state 33

    (19) A -> ID ASSIGN E SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 54


state 34

    (20) A -> ID ASSIGN FLOATNUM SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 55


state 35

    (21) A -> ID ASSIGN NUMBER SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 56


state 36

    (24) E -> V GT . FLOATNUM
    (25) E -> V GT . NUMBER
    (26) E -> V GT . V
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 58
    NUMBER          shift and go to state 59
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 57
    A                              shift and go to state 11

state 37

    (27) E -> V LT . FLOATNUM
    (28) E -> V LT . NUMBER
    (29) E -> V LT . V
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 61
    NUMBER          shift and go to state 62
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 60
    A                              shift and go to state 11

state 38

    (30) E -> V EQUAL . FLOATNUM
    (31) E -> V EQUAL . NUMBER

    FLOATNUM        shift and go to state 63
    NUMBER          shift and go to state 64


state 39

    (32) E -> V PLUS . FLOATNUM
    (33) E -> V PLUS . NUMBER
    (34) E -> V PLUS . V
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 66
    NUMBER          shift and go to state 67
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 65
    A                              shift and go to state 11

state 40

    (35) E -> V MINUS . FLOATNUM
    (36) E -> V MINUS . NUMBER
    (37) E -> V MINUS . V
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 69
    NUMBER          shift and go to state 70
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 68
    A                              shift and go to state 11

state 41

    (38) E -> V DIVIDE . FLOATNUM
    (39) E -> V DIVIDE . NUMBER
    (40) E -> V DIVIDE . V
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 72
    NUMBER          shift and go to state 73
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 71
    A                              shift and go to state 11

state 42

    (41) E -> V TIMES . FLOATNUM
    (42) E -> V TIMES . NUMBER
    (43) E -> V TIMES . V
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    FLOATNUM        shift and go to state 75
    NUMBER          shift and go to state 76
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 74
    A                              shift and go to state 11

state 43

    (44) E -> V GTE . V
    (45) E -> V GTE . NUMBER
    (46) E -> V GTE . FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    NUMBER          shift and go to state 78
    FLOATNUM        shift and go to state 79
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 77
    A                              shift and go to state 11

state 44

    (47) E -> V LTE . V
    (48) E -> V LTE . NUMBER
    (49) E -> V LTE . FLOATNUM
    (53) V -> . TYPE ID IS INT SEMICOLON NEWLINE
    (54) V -> . TYPE ID IS FLOAT SEMICOLON NEWLINE
    (55) V -> . TYPE ID IS ARRAY R SEMICOLON NEWLINE
    (56) V -> . TYPE ID SEMICOLON NEWLINE
    (57) V -> . A
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE

    NUMBER          shift and go to state 81
    FLOATNUM        shift and go to state 82
    TYPE            shift and go to state 10
    ID              shift and go to state 7

    V                              shift and go to state 80
    A                              shift and go to state 11

state 45

    (22) P -> PROCEDURE ID IS V END ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 83


state 46

    (23) P -> PROCEDURE ID IS BEGIN S END ID . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 84


state 47

    (12) WHILESTATEMENT -> WHILE E LOOP . S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> WHILE E LOOP . A END LOOP SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 85
    A                              shift and go to state 86
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 48

    (14) FORSTATEMENT -> FOR V IN . R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN . R LOOP A END LOOP SEMICOLON NEWLINE
    (50) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (51) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 88

    R                              shift and go to state 87

state 49

    (2) IFSTATEMENT -> IF E THEN . S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E THEN . S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E THEN . S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN . S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN . S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> IF E THEN . A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E THEN . A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E THEN . A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN . A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN . A ELSE A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 89
    A                              shift and go to state 90
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 50

    (53) V -> TYPE ID IS INT . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 91


state 51

    (54) V -> TYPE ID IS FLOAT . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 92


state 52

    (55) V -> TYPE ID IS ARRAY . R SEMICOLON NEWLINE
    (50) R -> . BRAOPEN INT SUSPENSIVE INT BRACLOSE
    (51) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> . BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRAOPEN         shift and go to state 88

    R                              shift and go to state 93

state 53

    (56) V -> TYPE ID SEMICOLON NEWLINE .

    END             reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    GT              reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    LT              reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    PLUS            reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    MINUS           reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    TIMES           reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    GTE             reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    LTE             reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    IN              reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    LOOP            reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)
    THEN            reduce using rule 56 (V -> TYPE ID SEMICOLON NEWLINE .)


state 54

    (19) A -> ID ASSIGN E SEMICOLON NEWLINE .

    END             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    GT              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    LT              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    PLUS            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    MINUS           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    TIMES           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    GTE             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    LTE             reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    IN              reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    LOOP            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    THEN            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)
    ELSE            reduce using rule 19 (A -> ID ASSIGN E SEMICOLON NEWLINE .)


state 55

    (20) A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .

    END             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    GT              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    LT              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    PLUS            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    MINUS           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    TIMES           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    GTE             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    LTE             reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    IN              reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    LOOP            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    THEN            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)
    ELSE            reduce using rule 20 (A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE .)


state 56

    (21) A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .

    END             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    GT              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    LT              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    PLUS            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    MINUS           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    TIMES           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    GTE             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    LTE             reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    IN              reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    LOOP            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    THEN            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)
    ELSE            reduce using rule 21 (A -> ID ASSIGN NUMBER SEMICOLON NEWLINE .)


state 57

    (26) E -> V GT V .

    SEMICOLON       reduce using rule 26 (E -> V GT V .)
    LOOP            reduce using rule 26 (E -> V GT V .)
    THEN            reduce using rule 26 (E -> V GT V .)


state 58

    (24) E -> V GT FLOATNUM .

    SEMICOLON       reduce using rule 24 (E -> V GT FLOATNUM .)
    LOOP            reduce using rule 24 (E -> V GT FLOATNUM .)
    THEN            reduce using rule 24 (E -> V GT FLOATNUM .)


state 59

    (25) E -> V GT NUMBER .

    SEMICOLON       reduce using rule 25 (E -> V GT NUMBER .)
    LOOP            reduce using rule 25 (E -> V GT NUMBER .)
    THEN            reduce using rule 25 (E -> V GT NUMBER .)


state 60

    (29) E -> V LT V .

    SEMICOLON       reduce using rule 29 (E -> V LT V .)
    LOOP            reduce using rule 29 (E -> V LT V .)
    THEN            reduce using rule 29 (E -> V LT V .)


state 61

    (27) E -> V LT FLOATNUM .

    SEMICOLON       reduce using rule 27 (E -> V LT FLOATNUM .)
    LOOP            reduce using rule 27 (E -> V LT FLOATNUM .)
    THEN            reduce using rule 27 (E -> V LT FLOATNUM .)


state 62

    (28) E -> V LT NUMBER .

    SEMICOLON       reduce using rule 28 (E -> V LT NUMBER .)
    LOOP            reduce using rule 28 (E -> V LT NUMBER .)
    THEN            reduce using rule 28 (E -> V LT NUMBER .)


state 63

    (30) E -> V EQUAL FLOATNUM .

    SEMICOLON       reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    LOOP            reduce using rule 30 (E -> V EQUAL FLOATNUM .)
    THEN            reduce using rule 30 (E -> V EQUAL FLOATNUM .)


state 64

    (31) E -> V EQUAL NUMBER .

    SEMICOLON       reduce using rule 31 (E -> V EQUAL NUMBER .)
    LOOP            reduce using rule 31 (E -> V EQUAL NUMBER .)
    THEN            reduce using rule 31 (E -> V EQUAL NUMBER .)


state 65

    (34) E -> V PLUS V .

    SEMICOLON       reduce using rule 34 (E -> V PLUS V .)
    LOOP            reduce using rule 34 (E -> V PLUS V .)
    THEN            reduce using rule 34 (E -> V PLUS V .)


state 66

    (32) E -> V PLUS FLOATNUM .

    SEMICOLON       reduce using rule 32 (E -> V PLUS FLOATNUM .)
    LOOP            reduce using rule 32 (E -> V PLUS FLOATNUM .)
    THEN            reduce using rule 32 (E -> V PLUS FLOATNUM .)


state 67

    (33) E -> V PLUS NUMBER .

    SEMICOLON       reduce using rule 33 (E -> V PLUS NUMBER .)
    LOOP            reduce using rule 33 (E -> V PLUS NUMBER .)
    THEN            reduce using rule 33 (E -> V PLUS NUMBER .)


state 68

    (37) E -> V MINUS V .

    SEMICOLON       reduce using rule 37 (E -> V MINUS V .)
    LOOP            reduce using rule 37 (E -> V MINUS V .)
    THEN            reduce using rule 37 (E -> V MINUS V .)


state 69

    (35) E -> V MINUS FLOATNUM .

    SEMICOLON       reduce using rule 35 (E -> V MINUS FLOATNUM .)
    LOOP            reduce using rule 35 (E -> V MINUS FLOATNUM .)
    THEN            reduce using rule 35 (E -> V MINUS FLOATNUM .)


state 70

    (36) E -> V MINUS NUMBER .

    SEMICOLON       reduce using rule 36 (E -> V MINUS NUMBER .)
    LOOP            reduce using rule 36 (E -> V MINUS NUMBER .)
    THEN            reduce using rule 36 (E -> V MINUS NUMBER .)


state 71

    (40) E -> V DIVIDE V .

    SEMICOLON       reduce using rule 40 (E -> V DIVIDE V .)
    LOOP            reduce using rule 40 (E -> V DIVIDE V .)
    THEN            reduce using rule 40 (E -> V DIVIDE V .)


state 72

    (38) E -> V DIVIDE FLOATNUM .

    SEMICOLON       reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    LOOP            reduce using rule 38 (E -> V DIVIDE FLOATNUM .)
    THEN            reduce using rule 38 (E -> V DIVIDE FLOATNUM .)


state 73

    (39) E -> V DIVIDE NUMBER .

    SEMICOLON       reduce using rule 39 (E -> V DIVIDE NUMBER .)
    LOOP            reduce using rule 39 (E -> V DIVIDE NUMBER .)
    THEN            reduce using rule 39 (E -> V DIVIDE NUMBER .)


state 74

    (43) E -> V TIMES V .

    SEMICOLON       reduce using rule 43 (E -> V TIMES V .)
    LOOP            reduce using rule 43 (E -> V TIMES V .)
    THEN            reduce using rule 43 (E -> V TIMES V .)


state 75

    (41) E -> V TIMES FLOATNUM .

    SEMICOLON       reduce using rule 41 (E -> V TIMES FLOATNUM .)
    LOOP            reduce using rule 41 (E -> V TIMES FLOATNUM .)
    THEN            reduce using rule 41 (E -> V TIMES FLOATNUM .)


state 76

    (42) E -> V TIMES NUMBER .

    SEMICOLON       reduce using rule 42 (E -> V TIMES NUMBER .)
    LOOP            reduce using rule 42 (E -> V TIMES NUMBER .)
    THEN            reduce using rule 42 (E -> V TIMES NUMBER .)


state 77

    (44) E -> V GTE V .

    SEMICOLON       reduce using rule 44 (E -> V GTE V .)
    LOOP            reduce using rule 44 (E -> V GTE V .)
    THEN            reduce using rule 44 (E -> V GTE V .)


state 78

    (45) E -> V GTE NUMBER .

    SEMICOLON       reduce using rule 45 (E -> V GTE NUMBER .)
    LOOP            reduce using rule 45 (E -> V GTE NUMBER .)
    THEN            reduce using rule 45 (E -> V GTE NUMBER .)


state 79

    (46) E -> V GTE FLOATNUM .

    SEMICOLON       reduce using rule 46 (E -> V GTE FLOATNUM .)
    LOOP            reduce using rule 46 (E -> V GTE FLOATNUM .)
    THEN            reduce using rule 46 (E -> V GTE FLOATNUM .)


state 80

    (47) E -> V LTE V .

    SEMICOLON       reduce using rule 47 (E -> V LTE V .)
    LOOP            reduce using rule 47 (E -> V LTE V .)
    THEN            reduce using rule 47 (E -> V LTE V .)


state 81

    (48) E -> V LTE NUMBER .

    SEMICOLON       reduce using rule 48 (E -> V LTE NUMBER .)
    LOOP            reduce using rule 48 (E -> V LTE NUMBER .)
    THEN            reduce using rule 48 (E -> V LTE NUMBER .)


state 82

    (49) E -> V LTE FLOATNUM .

    SEMICOLON       reduce using rule 49 (E -> V LTE FLOATNUM .)
    LOOP            reduce using rule 49 (E -> V LTE FLOATNUM .)
    THEN            reduce using rule 49 (E -> V LTE FLOATNUM .)


state 83

    (22) P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE .

    $end            reduce using rule 22 (P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE .)


state 84

    (23) P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 94


state 85

    (12) WHILESTATEMENT -> WHILE E LOOP S . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 95


state 86

    (13) WHILESTATEMENT -> WHILE E LOOP A . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 96


state 87

    (14) FORSTATEMENT -> FOR V IN R . LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN R . LOOP A END LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 97


state 88

    (50) R -> BRAOPEN . INT SUSPENSIVE INT BRACLOSE
    (51) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 98


state 89

    (2) IFSTATEMENT -> IF E THEN S . ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> IF E THEN S . ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> IF E THEN S . END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN S . ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN S . ELSE A END IF SEMICOLON NEWLINE

    ELSIF           shift and go to state 99
    ELSE            shift and go to state 101
    END             shift and go to state 100


state 90

    (7) IFSTATEMENT -> IF E THEN A . END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> IF E THEN A . ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> IF E THEN A . ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN A . ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN A . ELSE A END IF SEMICOLON NEWLINE

    END             shift and go to state 102
    ELSIF           shift and go to state 103
    ELSE            shift and go to state 104


state 91

    (53) V -> TYPE ID IS INT SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 105


state 92

    (54) V -> TYPE ID IS FLOAT SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 106


state 93

    (55) V -> TYPE ID IS ARRAY R . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 107


state 94

    (23) P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE .

    $end            reduce using rule 23 (P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE .)


state 95

    (12) WHILESTATEMENT -> WHILE E LOOP S END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 108


state 96

    (13) WHILESTATEMENT -> WHILE E LOOP A END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 109


state 97

    (14) FORSTATEMENT -> FOR V IN R LOOP . S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> FOR V IN R LOOP . A END LOOP SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 110
    A                              shift and go to state 111
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 98

    (50) R -> BRAOPEN INT . SUSPENSIVE INT BRACLOSE
    (51) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 112


state 99

    (2) IFSTATEMENT -> IF E THEN S ELSIF . S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> IF E THEN S ELSIF . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 113
    A                              shift and go to state 114
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 100

    (4) IFSTATEMENT -> IF E THEN S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 115


state 101

    (3) IFSTATEMENT -> IF E THEN S ELSE . S END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> IF E THEN S ELSE . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    S                              shift and go to state 116
    A                              shift and go to state 117
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 102

    (7) IFSTATEMENT -> IF E THEN A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 118


state 103

    (8) IFSTATEMENT -> IF E THEN A ELSIF . S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> IF E THEN A ELSIF . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    A                              shift and go to state 119
    S                              shift and go to state 120
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 104

    (9) IFSTATEMENT -> IF E THEN A ELSE . S END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> IF E THEN A ELSE . A END IF SEMICOLON NEWLINE
    (16) S -> . WHILESTATEMENT
    (17) S -> . FORSTATEMENT
    (18) S -> . IFSTATEMENT
    (19) A -> . ID ASSIGN E SEMICOLON NEWLINE
    (20) A -> . ID ASSIGN FLOATNUM SEMICOLON NEWLINE
    (21) A -> . ID ASSIGN NUMBER SEMICOLON NEWLINE
    (12) WHILESTATEMENT -> . WHILE E LOOP S END LOOP SEMICOLON NEWLINE
    (13) WHILESTATEMENT -> . WHILE E LOOP A END LOOP SEMICOLON NEWLINE
    (14) FORSTATEMENT -> . FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE
    (15) FORSTATEMENT -> . FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE
    (2) IFSTATEMENT -> . IF E THEN S ELSIF S END IF SEMICOLON NEWLINE
    (3) IFSTATEMENT -> . IF E THEN S ELSE S END IF SEMICOLON NEWLINE
    (4) IFSTATEMENT -> . IF E THEN S END IF SEMICOLON NEWLINE
    (5) IFSTATEMENT -> . IF E THEN S ELSIF A END IF SEMICOLON NEWLINE
    (6) IFSTATEMENT -> . IF E THEN S ELSE A END IF SEMICOLON NEWLINE
    (7) IFSTATEMENT -> . IF E THEN A END IF SEMICOLON NEWLINE
    (8) IFSTATEMENT -> . IF E THEN A ELSIF S END IF SEMICOLON NEWLINE
    (9) IFSTATEMENT -> . IF E THEN A ELSE S END IF SEMICOLON NEWLINE
    (10) IFSTATEMENT -> . IF E THEN A ELSIF A END IF SEMICOLON NEWLINE
    (11) IFSTATEMENT -> . IF E THEN A ELSE A END IF SEMICOLON NEWLINE

    ID              shift and go to state 7
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    IF              shift and go to state 20

    A                              shift and go to state 121
    S                              shift and go to state 122
    WHILESTATEMENT                 shift and go to state 15
    FORSTATEMENT                   shift and go to state 16
    IFSTATEMENT                    shift and go to state 17

state 105

    (53) V -> TYPE ID IS INT SEMICOLON NEWLINE .

    END             reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    GT              reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    LT              reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    PLUS            reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    MINUS           reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    TIMES           reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    GTE             reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    LTE             reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    IN              reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    LOOP            reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)
    THEN            reduce using rule 53 (V -> TYPE ID IS INT SEMICOLON NEWLINE .)


state 106

    (54) V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .

    END             reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    GT              reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    LT              reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    PLUS            reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    MINUS           reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    TIMES           reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    GTE             reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    LTE             reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    IN              reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    LOOP            reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)
    THEN            reduce using rule 54 (V -> TYPE ID IS FLOAT SEMICOLON NEWLINE .)


state 107

    (55) V -> TYPE ID IS ARRAY R SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 123


state 108

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 124


state 109

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 125


state 110

    (14) FORSTATEMENT -> FOR V IN R LOOP S . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 126


state 111

    (15) FORSTATEMENT -> FOR V IN R LOOP A . END LOOP SEMICOLON NEWLINE

    END             shift and go to state 127


state 112

    (50) R -> BRAOPEN INT SUSPENSIVE . INT BRACLOSE
    (51) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 128


state 113

    (2) IFSTATEMENT -> IF E THEN S ELSIF S . END IF SEMICOLON NEWLINE

    END             shift and go to state 129


state 114

    (5) IFSTATEMENT -> IF E THEN S ELSIF A . END IF SEMICOLON NEWLINE

    END             shift and go to state 130


state 115

    (4) IFSTATEMENT -> IF E THEN S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 131


state 116

    (3) IFSTATEMENT -> IF E THEN S ELSE S . END IF SEMICOLON NEWLINE

    END             shift and go to state 132


state 117

    (6) IFSTATEMENT -> IF E THEN S ELSE A . END IF SEMICOLON NEWLINE

    END             shift and go to state 133


state 118

    (7) IFSTATEMENT -> IF E THEN A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 134


state 119

    (10) IFSTATEMENT -> IF E THEN A ELSIF A . END IF SEMICOLON NEWLINE

    END             shift and go to state 135


state 120

    (8) IFSTATEMENT -> IF E THEN A ELSIF S . END IF SEMICOLON NEWLINE

    END             shift and go to state 136


state 121

    (11) IFSTATEMENT -> IF E THEN A ELSE A . END IF SEMICOLON NEWLINE

    END             shift and go to state 137


state 122

    (9) IFSTATEMENT -> IF E THEN A ELSE S . END IF SEMICOLON NEWLINE

    END             shift and go to state 138


state 123

    (55) V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .

    END             reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    GT              reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    LT              reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    EQUAL           reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    PLUS            reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    MINUS           reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    DIVIDE          reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    TIMES           reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    GTE             reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    LTE             reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    IN              reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    SEMICOLON       reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    LOOP            reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)
    THEN            reduce using rule 55 (V -> TYPE ID IS ARRAY R SEMICOLON NEWLINE .)


state 124

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 139


state 125

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 140


state 126

    (14) FORSTATEMENT -> FOR V IN R LOOP S END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 141


state 127

    (15) FORSTATEMENT -> FOR V IN R LOOP A END . LOOP SEMICOLON NEWLINE

    LOOP            shift and go to state 142


state 128

    (50) R -> BRAOPEN INT SUSPENSIVE INT . BRACLOSE
    (51) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 143
    COMMA           shift and go to state 144


state 129

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 145


state 130

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 146


state 131

    (4) IFSTATEMENT -> IF E THEN S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 147


state 132

    (3) IFSTATEMENT -> IF E THEN S ELSE S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 148


state 133

    (6) IFSTATEMENT -> IF E THEN S ELSE A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 149


state 134

    (7) IFSTATEMENT -> IF E THEN A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 150


state 135

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 151


state 136

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 152


state 137

    (11) IFSTATEMENT -> IF E THEN A ELSE A END . IF SEMICOLON NEWLINE

    IF              shift and go to state 153


state 138

    (9) IFSTATEMENT -> IF E THEN A ELSE S END . IF SEMICOLON NEWLINE

    IF              shift and go to state 154


state 139

    (12) WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 12 (WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE .)


state 140

    (13) WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 13 (WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE .)


state 141

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 155


state 142

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 156


state 143

    (50) R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 50 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 50 (R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE .)


state 144

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 157


state 145

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 158


state 146

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 159


state 147

    (4) IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .

    END             reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 4 (IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE .)


state 148

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 160


state 149

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 161


state 150

    (7) IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .

    END             reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 7 (IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE .)


state 151

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 162


state 152

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 163


state 153

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 164


state 154

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF . SEMICOLON NEWLINE

    SEMICOLON       shift and go to state 165


state 155

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 166


state 156

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 167


state 157

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 168


state 158

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 169


state 159

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 170


state 160

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 171


state 161

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 172


state 162

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 173


state 163

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 174


state 164

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 175


state 165

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON . NEWLINE

    NEWLINE         shift and go to state 176


state 166

    (14) FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 14 (FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE .)


state 167

    (15) FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .

    END             reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)
    ELSE            reduce using rule 15 (FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE .)


state 168

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT COMMA INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 177


state 169

    (2) IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .

    END             reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 2 (IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE .)


state 170

    (5) IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .

    END             reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 5 (IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE .)


state 171

    (3) IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .

    END             reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 3 (IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE .)


state 172

    (6) IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .

    END             reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 6 (IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE .)


state 173

    (10) IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .

    END             reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 10 (IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE .)


state 174

    (8) IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .

    END             reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 8 (IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE .)


state 175

    (11) IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .

    END             reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 11 (IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE .)


state 176

    (9) IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .

    END             reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)
    ELSIF           reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)
    ELSE            reduce using rule 9 (IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE .)


state 177

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE
    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . COMMA INT SUSPENSIVE INT BRACLOSE

    BRACLOSE        shift and go to state 179
    COMMA           shift and go to state 178


state 178

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA . INT SUSPENSIVE INT BRACLOSE

    INT             shift and go to state 180


state 179

    (51) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 51 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 51 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)


state 180

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT . SUSPENSIVE INT BRACLOSE

    SUSPENSIVE      shift and go to state 181


state 181

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE . INT BRACLOSE

    INT             shift and go to state 182


state 182

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT . BRACLOSE

    BRACLOSE        shift and go to state 183


state 183

    (52) R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .

    LOOP            reduce using rule 52 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)
    SEMICOLON       reduce using rule 52 (R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE .)

