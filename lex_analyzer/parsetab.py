
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEARRAY ASSIGN BEGIN BRACLOSE BRAOPEN COMMA DIVIDE ELSE ELSIF END EQUAL FLOAT FLOATNUM FOR GT GTE ID IF IN INT IS LOOP LT LTE MINUS NEWLINE NUMBER PLUS PROCEDURE RANGE SEMICOLON SUSPENSIVE TAB THEN TIMES TYPE USE WHILE WITH\n    P : WITH P\n    \n    IFSTATEMENT : IF E THEN S ELSIF S END IF SEMICOLON NEWLINE\n                | IF E THEN S ELSE S END IF SEMICOLON NEWLINE\n                | IF E THEN S END IF SEMICOLON NEWLINE\n                | IF E THEN S ELSIF A END IF SEMICOLON NEWLINE\n                | IF E THEN S ELSE A END IF SEMICOLON NEWLINE\n                | IF E THEN A END IF SEMICOLON NEWLINE\n                | IF E THEN A ELSIF S END IF SEMICOLON NEWLINE\n                | IF E THEN A ELSE S END IF SEMICOLON NEWLINE\n                | IF E THEN A ELSIF A END IF SEMICOLON NEWLINE\n                | IF E THEN A ELSE A END IF SEMICOLON NEWLINE\n    \n    WHILESTATEMENT : WHILE E LOOP S END LOOP SEMICOLON NEWLINE\n                   | WHILE E LOOP A END LOOP SEMICOLON NEWLINE\n    \n    FORSTATEMENT :  FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE\n                 | FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE\n    \n    S : WHILESTATEMENT\n      | FORSTATEMENT\n      | IFSTATEMENT\n    \n    A : ID ASSIGN E SEMICOLON NEWLINE\n      | ID ASSIGN FLOATNUM SEMICOLON NEWLINE\n      | ID ASSIGN NUMBER SEMICOLON NEWLINE\n    \n    P : PROCEDURE ID IS V END ID SEMICOLON NEWLINE\n      | PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE\n    \n    E : V GT FLOATNUM \n    | V GT NUMBER \n    | V GT V\n    | V LT FLOATNUM \n    | V LT NUMBER \n    | V LT V\n    | V EQUAL FLOATNUM \n    | V EQUAL NUMBER \n    | V PLUS FLOATNUM \n    | V PLUS NUMBER \n    | V PLUS V\n    | V MINUS FLOATNUM \n    | V MINUS NUMBER \n    | V MINUS V\n    | V DIVIDE FLOATNUM \n    | V DIVIDE NUMBER \n    | V DIVIDE V\n    | V TIMES FLOATNUM \n    | V TIMES NUMBER \n    | V TIMES V\n    | V GTE V\n    | V GTE NUMBER\n    | V GTE FLOATNUM\n    | V LTE V\n    | V LTE NUMBER\n    | V LTE FLOATNUM\n    \n    R : BRAOPEN INT SUSPENSIVE INT BRACLOSE \n      | BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE\n      | BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE\n    \n    V : TYPE ID IS INT SEMICOLON \n      | TYPE ID IS FLOAT SEMICOLON\n      | TYPE ID IS ARRAY R SEMICOLON\n      | TYPE ID SEMICOLON\n    '
    
_lr_action_items = {'WITH':([0,2,],[2,2,]),'PROCEDURE':([0,2,],[3,3,]),'$end':([1,4,44,82,],[0,-1,-22,-23,]),'ID':([3,9,10,20,29,40,86,88,90,92,93,],[5,18,19,28,48,48,48,48,48,48,48,]),'IS':([5,18,],[6,25,]),'BEGIN':([6,],[8,]),'TYPE':([6,15,16,17,30,31,33,34,35,36,37,38,85,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'END':([7,11,12,13,14,26,46,47,77,78,79,80,94,100,101,103,104,106,107,109,110,111,112,131,132,133,134,135,142,145,161,162,164,165,166,167,168,169,170,171,],[10,20,-16,-17,-18,-56,83,84,89,91,-53,-54,-55,118,119,121,122,124,125,127,128,129,130,-12,-13,-19,-20,-21,-4,-7,-14,-15,-2,-5,-3,-6,-10,-8,-11,-9,]),'WHILE':([8,29,40,86,88,90,92,93,],[15,15,15,15,15,15,15,15,]),'FOR':([8,29,40,86,88,90,92,93,],[16,16,16,16,16,16,16,16,]),'IF':([8,29,40,86,88,89,90,91,92,93,121,122,124,125,127,128,129,130,],[17,17,17,17,17,105,17,108,17,17,140,141,143,144,146,147,148,149,]),'ELSIF':([12,13,14,77,78,131,132,133,134,135,142,145,161,162,164,165,166,167,168,169,170,171,],[-16,-17,-18,88,92,-12,-13,-19,-20,-21,-4,-7,-14,-15,-2,-5,-3,-6,-10,-8,-11,-9,]),'ELSE':([12,13,14,77,78,131,132,133,134,135,142,145,161,162,164,165,166,167,168,169,170,171,],[-16,-17,-18,90,93,-12,-13,-19,-20,-21,-4,-7,-14,-15,-2,-5,-3,-6,-10,-8,-11,-9,]),'SEMICOLON':([18,19,26,28,41,42,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,94,95,96,97,98,99,105,108,136,137,138,140,141,143,144,146,147,148,149,174,178,],[26,27,-56,45,79,80,-26,-24,-25,-29,-27,-28,-30,-31,-34,-32,-33,-37,-35,-36,-40,-38,-39,-43,-41,-42,-44,-45,-46,-47,-48,-49,-53,-54,94,-55,113,114,115,116,117,123,126,150,151,-50,153,154,155,156,157,158,159,160,-51,-52,]),'LOOP':([21,26,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,83,84,94,118,119,138,174,178,],[29,-56,-26,-24,-25,-29,-27,-28,-30,-31,-34,-32,-33,-37,-35,-36,-40,-38,-39,-43,-41,-42,-44,-45,-46,-47,-48,-49,86,-53,-54,95,96,-55,136,137,-50,-51,-52,]),'GT':([22,26,79,80,94,],[30,-56,-53,-54,-55,]),'LT':([22,26,79,80,94,],[31,-56,-53,-54,-55,]),'EQUAL':([22,26,79,80,94,],[32,-56,-53,-54,-55,]),'PLUS':([22,26,79,80,94,],[33,-56,-53,-54,-55,]),'MINUS':([22,26,79,80,94,],[34,-56,-53,-54,-55,]),'DIVIDE':([22,26,79,80,94,],[35,-56,-53,-54,-55,]),'TIMES':([22,26,79,80,94,],[36,-56,-53,-54,-55,]),'GTE':([22,26,79,80,94,],[37,-56,-53,-54,-55,]),'LTE':([22,26,79,80,94,],[38,-56,-53,-54,-55,]),'IN':([23,26,79,80,94,],[39,-56,-53,-54,-55,]),'THEN':([24,26,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,94,],[40,-56,-26,-24,-25,-29,-27,-28,-30,-31,-34,-32,-33,-37,-35,-36,-40,-38,-39,-43,-41,-42,-44,-45,-46,-47,-48,-49,-53,-54,-55,]),'INT':([25,76,102,139,163,173,176,],[41,87,120,152,172,175,177,]),'FLOAT':([25,],[42,]),'ARRAY':([25,],[43,]),'NEWLINE':([27,45,113,114,115,116,117,123,126,150,151,153,154,155,156,157,158,159,160,],[44,82,131,132,133,134,135,142,145,161,162,164,165,166,167,168,169,170,171,]),'FLOATNUM':([30,31,32,33,34,35,36,37,38,85,],[50,53,55,58,61,64,67,71,74,98,]),'NUMBER':([30,31,32,33,34,35,36,37,38,85,],[51,54,56,59,62,65,68,70,73,99,]),'BRAOPEN':([39,43,],[76,76,]),'ASSIGN':([48,],[85,]),'SUSPENSIVE':([87,152,175,],[102,163,176,]),'BRACLOSE':([120,172,177,],[138,174,178,]),'COMMA':([120,172,],[139,173,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'P':([0,2,],[1,4,]),'V':([6,15,16,17,30,31,33,34,35,36,37,38,85,],[7,22,23,22,49,52,57,60,63,66,69,72,22,]),'S':([8,29,40,86,88,90,92,93,],[11,46,77,100,103,106,110,112,]),'WHILESTATEMENT':([8,29,40,86,88,90,92,93,],[12,12,12,12,12,12,12,12,]),'FORSTATEMENT':([8,29,40,86,88,90,92,93,],[13,13,13,13,13,13,13,13,]),'IFSTATEMENT':([8,29,40,86,88,90,92,93,],[14,14,14,14,14,14,14,14,]),'E':([15,17,85,],[21,24,97,]),'A':([29,40,86,88,90,92,93,],[47,78,101,104,107,109,111,]),'R':([39,43,],[75,81,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> P","S'",1,None,None,None),
  ('P -> WITH P','P',2,'p_PROGRAM','main.py',286),
  ('IFSTATEMENT -> IF E THEN S ELSIF S END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',350),
  ('IFSTATEMENT -> IF E THEN S ELSE S END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',351),
  ('IFSTATEMENT -> IF E THEN S END IF SEMICOLON NEWLINE','IFSTATEMENT',8,'p_IFSTATEMENT','main.py',352),
  ('IFSTATEMENT -> IF E THEN S ELSIF A END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',353),
  ('IFSTATEMENT -> IF E THEN S ELSE A END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',354),
  ('IFSTATEMENT -> IF E THEN A END IF SEMICOLON NEWLINE','IFSTATEMENT',8,'p_IFSTATEMENT','main.py',355),
  ('IFSTATEMENT -> IF E THEN A ELSIF S END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',356),
  ('IFSTATEMENT -> IF E THEN A ELSE S END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',357),
  ('IFSTATEMENT -> IF E THEN A ELSIF A END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',358),
  ('IFSTATEMENT -> IF E THEN A ELSE A END IF SEMICOLON NEWLINE','IFSTATEMENT',10,'p_IFSTATEMENT','main.py',359),
  ('WHILESTATEMENT -> WHILE E LOOP S END LOOP SEMICOLON NEWLINE','WHILESTATEMENT',8,'p_WHILESTATEMENT','main.py',365),
  ('WHILESTATEMENT -> WHILE E LOOP A END LOOP SEMICOLON NEWLINE','WHILESTATEMENT',8,'p_WHILESTATEMENT','main.py',366),
  ('FORSTATEMENT -> FOR V IN R LOOP S END LOOP SEMICOLON NEWLINE','FORSTATEMENT',10,'p_FORSTATEMENT','main.py',372),
  ('FORSTATEMENT -> FOR V IN R LOOP A END LOOP SEMICOLON NEWLINE','FORSTATEMENT',10,'p_FORSTATEMENT','main.py',373),
  ('S -> WHILESTATEMENT','S',1,'p_S','main.py',379),
  ('S -> FORSTATEMENT','S',1,'p_S','main.py',380),
  ('S -> IFSTATEMENT','S',1,'p_S','main.py',381),
  ('A -> ID ASSIGN E SEMICOLON NEWLINE','A',5,'p_A','main.py',389),
  ('A -> ID ASSIGN FLOATNUM SEMICOLON NEWLINE','A',5,'p_A','main.py',390),
  ('A -> ID ASSIGN NUMBER SEMICOLON NEWLINE','A',5,'p_A','main.py',391),
  ('P -> PROCEDURE ID IS V END ID SEMICOLON NEWLINE','P',8,'p_P','main.py',402),
  ('P -> PROCEDURE ID IS BEGIN S END ID SEMICOLON NEWLINE','P',9,'p_P','main.py',403),
  ('E -> V GT FLOATNUM','E',3,'p_E','main.py',434),
  ('E -> V GT NUMBER','E',3,'p_E','main.py',435),
  ('E -> V GT V','E',3,'p_E','main.py',436),
  ('E -> V LT FLOATNUM','E',3,'p_E','main.py',437),
  ('E -> V LT NUMBER','E',3,'p_E','main.py',438),
  ('E -> V LT V','E',3,'p_E','main.py',439),
  ('E -> V EQUAL FLOATNUM','E',3,'p_E','main.py',440),
  ('E -> V EQUAL NUMBER','E',3,'p_E','main.py',441),
  ('E -> V PLUS FLOATNUM','E',3,'p_E','main.py',442),
  ('E -> V PLUS NUMBER','E',3,'p_E','main.py',443),
  ('E -> V PLUS V','E',3,'p_E','main.py',444),
  ('E -> V MINUS FLOATNUM','E',3,'p_E','main.py',445),
  ('E -> V MINUS NUMBER','E',3,'p_E','main.py',446),
  ('E -> V MINUS V','E',3,'p_E','main.py',447),
  ('E -> V DIVIDE FLOATNUM','E',3,'p_E','main.py',448),
  ('E -> V DIVIDE NUMBER','E',3,'p_E','main.py',449),
  ('E -> V DIVIDE V','E',3,'p_E','main.py',450),
  ('E -> V TIMES FLOATNUM','E',3,'p_E','main.py',451),
  ('E -> V TIMES NUMBER','E',3,'p_E','main.py',452),
  ('E -> V TIMES V','E',3,'p_E','main.py',453),
  ('E -> V GTE V','E',3,'p_E','main.py',454),
  ('E -> V GTE NUMBER','E',3,'p_E','main.py',455),
  ('E -> V GTE FLOATNUM','E',3,'p_E','main.py',456),
  ('E -> V LTE V','E',3,'p_E','main.py',457),
  ('E -> V LTE NUMBER','E',3,'p_E','main.py',458),
  ('E -> V LTE FLOATNUM','E',3,'p_E','main.py',459),
  ('R -> BRAOPEN INT SUSPENSIVE INT BRACLOSE','R',5,'p_R','main.py',485),
  ('R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE','R',9,'p_R','main.py',486),
  ('R -> BRAOPEN INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT COMMA INT SUSPENSIVE INT BRACLOSE','R',13,'p_R','main.py',487),
  ('V -> TYPE ID IS INT SEMICOLON','V',5,'p_V','main.py',514),
  ('V -> TYPE ID IS FLOAT SEMICOLON','V',5,'p_V','main.py',515),
  ('V -> TYPE ID IS ARRAY R SEMICOLON','V',6,'p_V','main.py',516),
  ('V -> TYPE ID SEMICOLON','V',3,'p_V','main.py',517),
]
